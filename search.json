[{"path":"https://docs.ropensci.org/tidync/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tidync/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://docs.ropensci.org/tidync/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://docs.ropensci.org/tidync/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. recommend tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://docs.ropensci.org/tidync/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"CONTRIBUTING","text":"Please note tidync project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/tidync/CONTRIBUTING.html","id":"see-ropensci-contributing-guide","dir":"","previous_headings":"","what":"See rOpenSci contributing guide","title":"CONTRIBUTING","text":"details.","code":""},{"path":"https://docs.ropensci.org/tidync/CONTRIBUTING.html","id":"discussion-forum","dir":"","previous_headings":"","what":"Discussion forum","title":"CONTRIBUTING","text":"Check discussion forum question, use case, otherwise bug feature request software . think issue requires longer form discussion.","code":""},{"path":"https://docs.ropensci.org/tidync/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://docs.ropensci.org/tidync/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://docs.ropensci.org/tidync/articles/netcdf-with-tidync.html","id":"netcdf","dir":"Articles","previous_headings":"","what":"NetCDF","title":"NetCDF with tidync","text":"NetCDF widely used file format storing array-based data variables. space occupied variable defined dimensions metadata. Dimensions definition one-dimensional (.e. atomic vector R length 1 ), array coordinate metadata, units, type interpretation. space variable defined one dimensions file. given variable won’t necessarily use available dimensions dimensions mandatory particularly special. conventions exist define usage minimal standards metadata particular file schemas, many varied, always adhered . Tidync provide data interpretation intended general use, including tools create data formats. R community particularly strong use NetCDF, though common widely used pales compared use general climate science work, used tool CDO Climate Data Operators. R common tools used ncdf4 raster (uses ncdf4). RNetCDF ncdf4 packages provide traditional summary format, familiar many NetCDF users output command line program ncdump. Using ncdump command line suitable system yield similar output print . ncdf4 package ’s slightly different approach, gives result. Notice listing organized dimension variable. ’s particularly obvious variables defined within set dimensions others. NetCDF file container simple array based data structures. limited capacity 1 formal API accessing data randomly within variable, primary mechanism define offset stride (start count) hyperslab indexes.","code":"ice_file <- system.file(\"extdata\", \"ifremer\", \"20171002.nc\", package = \"tidync\", mustWork = TRUE) library(RNetCDF) print.nc(open.nc(ice_file)) #> netcdf classic { #> dimensions: #>  ni = 632 ; #>  nj = 664 ; #>  time = 1 ; #> variables: #>  NC_INT time(time) ; #>      NC_CHAR time:long_name = \"time\" ; #>      NC_CHAR time:units = \"hours since 1900-1-1 0:0:0\" ; #>  NC_BYTE concentration(ni, nj, time) ; #>      NC_CHAR concentration:long_name = \"sea-ice concentration\" ; #>      NC_CHAR concentration:units = \"percent\" ; #>      NC_DOUBLE concentration:scale_factor = 1 ; #>      NC_DOUBLE concentration:add_offset = 0 ; #>      NC_BYTE concentration:missing_value = -128 ; #>      NC_BYTE concentration:_FillValue = -128 ; #>  NC_BYTE quality_flag(ni, nj, time) ; #>      NC_CHAR quality_flag:long_name = \"quality_flag\" ; #>      NC_CHAR quality_flag:units = \"n/a\" ; #>      NC_DOUBLE quality_flag:scale_factor = 1 ; #>      NC_DOUBLE quality_flag:add_offset = 0 ; #>      NC_BYTE quality_flag:missing_value = -128 ; #>      NC_BYTE quality_flag:_FillValue = -128 ; #>  #> // global attributes: #>      NC_CHAR :CONVENTIONS = \"COARDS\" ; #>      NC_CHAR :long_name = \"Sea-ice concentration as observed by SSM/I\" ; #>      NC_CHAR :short_name = \"PSI-F18-Concentration\" ; #>      NC_CHAR :producer_agency = \"IFREMER\" ; #>      NC_CHAR :producer_institution = \"CERSAT\" ; #>      NC_CHAR :netcdf_version_id = \"3.4\" ; #>      NC_CHAR :product_version = \"2.0\" ; #>      NC_CHAR :creation_time = \"2017-280T08:26:34.000\" ; #>      NC_CHAR :time_resolution = \"daily\" ; #>      NC_CHAR :grid = \"NSIDC\" ; #>      NC_CHAR :pole = \"south\" ; #>      NC_CHAR :spatial_resolution = \"12.5 km\" ; #>      NC_CHAR :platform_id = \"F18\" ; #>      NC_CHAR :instrument = \"SSM/I\" ; #> } ncdump -h /path/to/extdata/ifremer/20171002.nc print(ncdf4::nc_open(ice_file))"},{"path":"https://docs.ropensci.org/tidync/articles/netcdf-with-tidync.html","id":"tidync","dir":"Articles","previous_headings":"NetCDF","what":"tidync","title":"NetCDF with tidync","text":"Tidync aims ease exploration contents NetCDF file provides methods extract arbitrary hyperslabs. can used directly array contexts, “long form” database contexts. first contact file, available variables classified grid dimension. “active” grid one queries may made , may changed activate function. see variables clearly grouped grid exist , grid specific (ordered!) set dimensions. allows us see set variables implicitly co-exist, shape. first grid “D0,D1,D2” two variables, concentration quality_flag, second “D2” one variable time. general rules , file might number dimensions variables, variable might defined one dimensions. case D2 grid one variable single dimension, happens special kind variable - “coordinate dimension”, indicated coord_dim flag. traditional ncdump summary ’s easy see ’s really one data grid, ni,nj,time holds two variables, time special coordinate dimension - contrast neither ni nj explicit 1-dimension variable. many dimensions /many variables patterns easy see. particular grid chosen default, “D0,D1,D2” grid composed 3 dimensions, generally largest grid chosen usually target . choose different grid may nominate name, member variable. name choose grid composed one dimension, summary print makes distinction based dimensions active. also possible choose grid variable name. choose variable default grid, ’s different first case. data variables available grid can expanded single data frame, coordinates copied - efficient(!) craft queries sensibly read need, ’s easy way explore data file. ‘hyper_filter’ function allows specification expressions subset variable based dimension’s coordinate values. expressions included presented table containing row dimension, extent coordinates length. convenience also assign activate form R variable, though just chain entire operation without . specifying inequality expressions see implicit subsetting array. Everything far implicit delay file-based computation required actually interact file read . Notice “name = expr” paired expressions, right hand side may quite general need left hand side name assured name dimension referred . can also use special internal variable ‘index’, test position dimension elements ‘1:length’ rather values. ’s different case ni nj just position dimensions anyway. special ‘dplyr’ adverbs like ‘’ work.","code":"library(tidync) tidync(ice_file) #> Warning in CFtime::CFtimestamp(dims$time[i][[1]]): Function `CFtimestamp()` is #> deprecated. Use `as_timestamp()` instead. #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag    **ACTIVE GRID** ( 419648  values per variable) #> [2]   D2       : time #>  #> Dimensions 3 (all active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    ni       632       1     632     1   632       1     632 FALSE FALSE      #> 2 D1    nj       664       1     664     1   664       1     664 FALSE FALSE      #> 3 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE tidync(ice_file) %>% activate(\"D2\") #> Warning in CFtime::CFtimestamp(dims$time[i][[1]]): Function `CFtimestamp()` is #> deprecated. Use `as_timestamp()` instead. #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag #> [2]   D2       : time    **ACTIVE GRID** ( 1  value per variable) #>  #> Dimensions 3 (1 active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE       #>    #> Inactive dimensions: #>    #>   dim   name  length   min   max unlim coord_dim  #>   <chr> <chr>  <dbl> <dbl> <dbl> <lgl> <lgl>      #> 1 D0    ni       632     1   632 FALSE FALSE      #> 2 D1    nj       664     1   664 FALSE FALSE tidync(ice_file) %>% activate(\"time\") #> Warning in CFtime::CFtimestamp(dims$time[i][[1]]): Function `CFtimestamp()` is #> deprecated. Use `as_timestamp()` instead. #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag #> [2]   D2       : time    **ACTIVE GRID** ( 1  value per variable) #>  #> Dimensions 3 (1 active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE       #>    #> Inactive dimensions: #>    #>   dim   name  length   min   max unlim coord_dim  #>   <chr> <chr>  <dbl> <dbl> <dbl> <lgl> <lgl>      #> 1 D0    ni       632     1   632 FALSE FALSE      #> 2 D1    nj       664     1   664 FALSE FALSE  ## choose grid by variable name, which happens to be the default grid here tidync(ice_file) %>% activate(\"quality_flag\") #> Warning in CFtime::CFtimestamp(dims$time[i][[1]]): Function `CFtimestamp()` is #> deprecated. Use `as_timestamp()` instead. #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag    **ACTIVE GRID** ( 419648  values per variable) #> [2]   D2       : time #>  #> Dimensions 3 (all active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    ni       632       1     632     1   632       1     632 FALSE FALSE      #> 2 D1    nj       664       1     664     1   664       1     664 FALSE FALSE      #> 3 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE  ## same as the default tidync(ice_file) %>% activate(\"D0,D1,D2\") #> Warning in CFtime::CFtimestamp(dims$time[i][[1]]): Function `CFtimestamp()` is #> deprecated. Use `as_timestamp()` instead. #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag    **ACTIVE GRID** ( 419648  values per variable) #> [2]   D2       : time #>  #> Dimensions 3 (all active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    ni       632       1     632     1   632       1     632 FALSE FALSE      #> 2 D1    nj       664       1     664     1   664       1     664 FALSE FALSE      #> 3 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE concentration <- tidync(ice_file)  #> Warning in CFtime::CFtimestamp(dims$time[i][[1]]): Function `CFtimestamp()` is #> deprecated. Use `as_timestamp()` instead. concentration %>% hyper_filter()  #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag    **ACTIVE GRID** ( 419648  values per variable) #> [2]   D2       : time #>  #> Dimensions 3 (all active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    ni       632       1     632     1   632       1     632 FALSE FALSE      #> 2 D1    nj       664       1     664     1   664       1     664 FALSE FALSE      #> 3 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE concentration %>% hyper_filter(nj = nj < 20) #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag    **ACTIVE GRID** ( 419648  values per variable) #> [2]   D2       : time #>  #> Dimensions 3 (all active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    ni       632       1     632     1   632       1     632 FALSE FALSE      #> 2 D1    nj       664       1     664     1    19       1      19 FALSE FALSE      #> 3 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE concentration %>%    hyper_filter(ni = index < 50,                 nj = dplyr::between(index, 30, 100)) #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag    **ACTIVE GRID** ( 419648  values per variable) #> [2]   D2       : time #>  #> Dimensions 3 (all active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    ni       632       1     632     1    49       1      49 FALSE FALSE      #> 2 D1    nj       664       1     664    30    71      30     100 FALSE FALSE      #> 3 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE"},{"path":"https://docs.ropensci.org/tidync/articles/netcdf-with-tidync.html","id":"data-extraction","dir":"Articles","previous_headings":"NetCDF","what":"Data extraction","title":"NetCDF with tidync","text":"use idioms extract actual data? can now exercise variable choice dimension filters return actual data, either slicing “slab” array-form, data frame.","code":"hf <- concentration %>%    hyper_filter(ni = index > 150,                 nj = dplyr::between(index, 30, 100))  ## as an array arr <- hf %>% hyper_array() str(arr) #> List of 2 #>  $ concentration: int [1:482, 1:71] NA NA NA NA NA NA NA NA NA NA ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ ni: chr [1:482] \"151\" \"152\" \"153\" \"154\" ... #>   .. ..$ nj: chr [1:71] \"30\" \"31\" \"32\" \"33\" ... #>  $ quality_flag : int [1:482, 1:71] 8 8 8 8 8 8 8 8 8 8 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ ni: chr [1:482] \"151\" \"152\" \"153\" \"154\" ... #>   .. ..$ nj: chr [1:71] \"30\" \"31\" \"32\" \"33\" ... #>  - attr(*, \"transforms\")=List of 3 #>   ..$ ni  : tibble [632 × 6] (S3: tbl_df/tbl/data.frame) #>   .. ..$ ni       : int [1:632] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ index    : int [1:632] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ id       : int [1:632] 0 0 0 0 0 0 0 0 0 0 ... #>   .. ..$ name     : chr [1:632] \"ni\" \"ni\" \"ni\" \"ni\" ... #>   .. ..$ coord_dim: logi [1:632] FALSE FALSE FALSE FALSE FALSE FALSE ... #>   .. ..$ selected : logi [1:632] FALSE FALSE FALSE FALSE FALSE FALSE ... #>   ..$ nj  : tibble [664 × 6] (S3: tbl_df/tbl/data.frame) #>   .. ..$ nj       : int [1:664] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ index    : int [1:664] 1 2 3 4 5 6 7 8 9 10 ... #>   .. ..$ id       : int [1:664] 1 1 1 1 1 1 1 1 1 1 ... #>   .. ..$ name     : chr [1:664] \"nj\" \"nj\" \"nj\" \"nj\" ... #>   .. ..$ coord_dim: logi [1:664] FALSE FALSE FALSE FALSE FALSE FALSE ... #>   .. ..$ selected : logi [1:664] FALSE FALSE FALSE FALSE FALSE FALSE ... #>   ..$ time: tibble [1 × 7] (S3: tbl_df/tbl/data.frame) #>   .. ..$ time     : num 1032204 #>   .. ..$ timestamp: chr \"2017-10-02 12:00:00\" #>   .. ..$ index    : int 1 #>   .. ..$ id       : int 2 #>   .. ..$ name     : chr \"time\" #>   .. ..$ coord_dim: logi TRUE #>   .. ..$ selected : logi TRUE #>  - attr(*, \"source\")= tibble [1 × 2] (S3: tbl_df/tbl/data.frame) #>   ..$ access: POSIXct[1:1], format: \"2024-10-15 21:14:53\" #>   ..$ source: chr \"/usr/local/lib/R/site-library/tidync/extdata/ifremer/20171002.nc\" #>  - attr(*, \"class\")= chr \"tidync_data\"  ## as a data frame hf %>%    hyper_tibble() %>%    dplyr::filter(!is.na(concentration)) %>% dplyr::distinct(concentration, quality_flag) #> # A tibble: 105 × 2 #>    concentration quality_flag #>            <int>        <int> #>  1             0            0 #>  2             0           12 #>  3            42            0 #>  4            20            0 #>  5            21            0 #>  6            55            0 #>  7            17            0 #>  8            64            0 #>  9            25            0 #> 10            23            0 #> # ℹ 95 more rows"},{"path":"https://docs.ropensci.org/tidync/articles/netcdf-with-tidync.html","id":"interrogating-data-by-dimensions","dir":"Articles","previous_headings":"NetCDF","what":"Interrogating data by dimensions","title":"NetCDF with tidync","text":"connection object ‘hf’ available determining available might cut . ‘time’ interestingly length 1, perhaps adds nothing information otherwise 2D data set. open file ncdf4 RNetCDF wanted take subset file , specify start 1 count ` even though ’s completely redundant. ‘start’ ‘count’ values reported directly useable traditional API tools, particular functions ncdf4::ncvar_get() (varid, start, count), counterpart RNetCDF::var.get.nc() command line tools like CDO. , ’s pain know dimension variable specify every slot. Code traditional API looks like Obviously, reasonable specify count dimensions don’t want entirety . problem manifests exactly R arrays generally, can’t provide information dimensions want, specified explicitly - even mean . matter include filter query, can , none available dimensions, order. requirement ability automate task, far interacted dimensionality information print . programming, functions hyper_vars(), hyper_dims() hyper_grids() report elements source. value hyper_vars() hyper_dims() restricted active grid. function hyper_grids() reports available grids, currently active one indicated. name current grid also available via active().","code":"hf #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag    **ACTIVE GRID** ( 419648  values per variable) #> [2]   D2       : time #>  #> Dimensions 3 (all active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    ni       632       1     632   151   482     151     632 FALSE FALSE      #> 2 D1    nj       664       1     664    30    71      30     100 FALSE FALSE      #> 3 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE ## WARNING, pseudocode var_get(con, variable, start = c(1, 1, 1), count = c(10, 5, 1)) hf %>% hyper_filter(nj = index < 20, ni = ni > 20) #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag    **ACTIVE GRID** ( 419648  values per variable) #> [2]   D2       : time #>  #> Dimensions 3 (all active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    ni       632       1     632    21   612      21     632 FALSE FALSE      #> 2 D1    nj       664       1     664     1    19       1      19 FALSE FALSE      #> 3 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE  hf %>% hyper_filter(nj = index < 20) #>  #> Data Source (1): 20171002.nc ... #>  #> Grids (2) <dimension family> : <associated variables>  #>  #> [1]   D0,D1,D2 : concentration, quality_flag    **ACTIVE GRID** ( 419648  values per variable) #> [2]   D2       : time #>  #> Dimensions 3 (all active):  #>    #>   dim   name  length     min     max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>   <dbl>   <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    ni       632       1     632   151   482     151     632 FALSE FALSE      #> 2 D1    nj       664       1     664     1    19       1      19 FALSE FALSE      #> 3 D2    time       1 1032204 1032204     1     1 1032204 1032204 FALSE TRUE hyper_vars(hf) #> # A tibble: 2 × 6 #>      id name          type    ndims natts dim_coord #>   <int> <chr>         <chr>   <int> <int> <lgl>     #> 1     1 concentration NC_BYTE     3     6 FALSE     #> 2     2 quality_flag  NC_BYTE     3     6 FALSE hyper_dims(hf) #> # A tibble: 3 × 7 #>   name  length start count    id unlim coord_dim #>   <chr>  <dbl> <int> <int> <int> <lgl> <lgl>     #> 1 ni       632   151   482     0 FALSE FALSE     #> 2 nj       664    30    71     1 FALSE FALSE     #> 3 time       1     1     1     2 FALSE TRUE  ## change the active grid hf %>% activate(\"D2\") %>%    hyper_vars() #> # A tibble: 1 × 6 #>      id name  type   ndims natts dim_coord #>   <int> <chr> <chr>  <int> <int> <lgl>     #> 1     0 time  NC_INT     1     2 TRUE  active(hf) #> [1] \"D0,D1,D2\"  hf %>% activate(\"D2\") %>%   active() #> [1] \"D2\""},{"path":"https://docs.ropensci.org/tidync/articles/netcdf-with-tidync.html","id":"transforms","dir":"Articles","previous_headings":"NetCDF","what":"Transforms","title":"NetCDF with tidync","text":"hood tidync manages relationship dimensions coordinates via transforms tables. 1-dimensional mapping dimension index coordinate value (’s explicit value assumed equal 1-based index). tables available via hyper_transforms() function. table columns <dimension-name>, index, id, name, coord_dim (whether dimension explicit coordinates, <dimension-name> column), selected. selected column records dimension elements currently requested hyper_filter query, default set TRUE. Expressions filter function work updating column.","code":"hyper_transforms(hf) #> $ni #> # A tibble: 632 × 6 #>       ni index    id name  coord_dim selected #>    <int> <int> <int> <chr> <lgl>     <lgl>    #>  1     1     1     0 ni    FALSE     FALSE    #>  2     2     2     0 ni    FALSE     FALSE    #>  3     3     3     0 ni    FALSE     FALSE    #>  4     4     4     0 ni    FALSE     FALSE    #>  5     5     5     0 ni    FALSE     FALSE    #>  6     6     6     0 ni    FALSE     FALSE    #>  7     7     7     0 ni    FALSE     FALSE    #>  8     8     8     0 ni    FALSE     FALSE    #>  9     9     9     0 ni    FALSE     FALSE    #> 10    10    10     0 ni    FALSE     FALSE    #> # ℹ 622 more rows #>  #> $nj #> # A tibble: 664 × 6 #>       nj index    id name  coord_dim selected #>    <int> <int> <int> <chr> <lgl>     <lgl>    #>  1     1     1     1 nj    FALSE     FALSE    #>  2     2     2     1 nj    FALSE     FALSE    #>  3     3     3     1 nj    FALSE     FALSE    #>  4     4     4     1 nj    FALSE     FALSE    #>  5     5     5     1 nj    FALSE     FALSE    #>  6     6     6     1 nj    FALSE     FALSE    #>  7     7     7     1 nj    FALSE     FALSE    #>  8     8     8     1 nj    FALSE     FALSE    #>  9     9     9     1 nj    FALSE     FALSE    #> 10    10    10     1 nj    FALSE     FALSE    #> # ℹ 654 more rows #>  #> $time #> # A tibble: 1 × 7 #>      time timestamp           index    id name  coord_dim selected #>     <dbl> <chr>               <int> <int> <chr> <lgl>     <lgl>    #> 1 1032204 2017-10-02 12:00:00     1     2 time  TRUE      TRUE"},{"path":"https://docs.ropensci.org/tidync/articles/netcdf-with-tidync.html","id":"future-improvements","dir":"Articles","previous_headings":"NetCDF","what":"Future improvements","title":"NetCDF with tidync","text":"support multiple sources lazy read virtual grid support groups support compound types allow group-function polygon layer, pair dimensions classify cells allow truly DBI dplyr level lazy read, filter, select, mutate collect idioms provide converters raster format, stars format","code":""},{"path":"https://docs.ropensci.org/tidync/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Sumner. Author, maintainer. Simon Wotherspoon. Contributor. Tomas Remenyi. Contributor. Ben Raymond. Contributor. Jakub Nowosad. Contributor. Tim Lucas. Contributor. Hadley Wickham. Contributor. Adrian Odenweller. Contributor. Patrick Van Laake. Contributor. Fabian Bernhard. Contributor.","code":""},{"path":"https://docs.ropensci.org/tidync/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sumner M (2024). tidync: Tidy Approach 'NetCDF' Data Exploration Extraction. R package version 0.4.0, https://docs.ropensci.org/tidync/.","code":"@Manual{,   title = {tidync: A Tidy Approach to 'NetCDF' Data Exploration and Extraction},   author = {Michael Sumner},   year = {2024},   note = {R package version 0.4.0},   url = {https://docs.ropensci.org/tidync/}, }"},{"path":"https://docs.ropensci.org/tidync/index.html","id":"tidync","dir":"","previous_headings":"","what":"A Tidy Approach to NetCDF Data Exploration and Extraction","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"goal tidync ease exploring contents NetCDF source simplify process data extraction. extracting, data can accessed array/s, long-form data frame. contrast packages tidync helps reduce volume code required discover read contents NetCDF, simple steps: Connect summarize tidync(). (optionally) Specify source variables activate(). (optionally) Specify array sub-setting (slicing) hyper_filter(). Read array data native form hyper_array() long-form hyper_tibble() bespoke form hyper_tbl_cube(). NetCDF Network Common Data Form common, general way store work scientific array-based data. NetCDF defined provided Unidata. R (independent) support NetCDF via ncdf4, rhdf5, RNetCDF, rgdal, sf vapour packages. project uses RNetCDF primary access NetCDF library, well ncdf4 package cases. wrapper provided ncmeta RNetCDF used obtain information data sources.","code":""},{"path":"https://docs.ropensci.org/tidync/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"Install tidync CRAN. can install development version github : package packages ncdf4 RNetCDF required, first make sure can install use doesn’t work first time. problems, please see INSTALL instructions RNetCDF, work well ncdf4. note specifics different operating systems, notably Ubuntu/Debian work - aren’t comprehensive details might helpful.","code":"install.packages(\"tidync\") # install.packages(\"remotes\") remotes::install_github(\"ropensci/tidync\", dependencies = TRUE) install.packages(\"ncdf4\") install.packages(\"RNetCDF\")"},{"path":"https://docs.ropensci.org/tidync/index.html","id":"windows","dir":"","previous_headings":"Installation","what":"Windows","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"Windows, everything easy ncdf4 RNetCDF supported CRAN. RNetCDF package now includes OpenDAP/Thredds 64-bit Windows (32-bit), tidync work sources .","code":""},{"path":"https://docs.ropensci.org/tidync/index.html","id":"macos","dir":"","previous_headings":"Installation","what":"MacOS","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"MacOS, also easy binaries ncdf4 RNetCDF available CRAN. far know, RNetCDF support Thredds.","code":""},{"path":"https://docs.ropensci.org/tidync/index.html","id":"ubuntudebian","dir":"","previous_headings":"Installation","what":"Ubuntu/Debian","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"Linux need least following installed administrator, tested Ubuntu Xenial 16.04. R general information system dependencies libnetcdf-dev libudunits2-dev available Unidata.","code":"apt update  apt upgrade --assume-yes  ## Install 3rd parties for NetCDF apt install libnetcdf-dev libudunits2-dev  ## install 3rd parties needed for devtools + openssl git2r httr apt install libssl-dev install.packages(\"remotes\") remotes::install_github(\"ropensci/tidync\")"},{"path":"https://docs.ropensci.org/tidync/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"basic example shows connect file. two main ways using tidync, interactively explore , extraction. functions tidync activate hyper_filter allow us hone part/s data want, functions hyper_array, hyper_tibble hyper_tbl_cube give raw-array data frames.","code":"file <- system.file(\"extdata\", \"oceandata\", \"S20080012008031.L3m_MO_CHL_chlor_a_9km.nc\", package = \"tidync\") library(tidync) tidync(file)  #>  #> Data Source (1): S20080012008031.L3m_MO_CHL_chlor_a_9km.nc ... #>  #> Grids (4) <dimension family> : <associated variables>  #>  #> [1]   D1,D0 : chlor_a    **ACTIVE GRID** ( 9331200  values per variable) #> [2]   D3,D2 : palette #> [3]   D0    : lat #> [4]   D1    : lon #>  #> Dimensions 4 (2 active):  #>    #>   dim   name  length      min     max start count     dmin    dmax unlim  #>   <chr> <chr>  <dbl>    <dbl>   <dbl> <int> <int>    <dbl>   <dbl> <lgl>  #> 1 D0    lat     2160  -89.958  89.958     1  2160  -89.958  89.958 FALSE  #> 2 D1    lon     4320 -179.96  179.96      1  4320 -179.96  179.96  FALSE  #> # ℹ 1 more variable: coord_dim <lgl>  #>    #> Inactive dimensions: #>    #>   dim   name          length   min   max unlim coord_dim  #>   <chr> <chr>          <dbl> <dbl> <dbl> <lgl> <lgl>      #> 1 D2    rgb                3     1     3 FALSE FALSE      #> 2 D3    eightbitcolor    256     1   256 FALSE FALSE"},{"path":"https://docs.ropensci.org/tidync/index.html","id":"interactive","dir":"","previous_headings":"Usage","what":"Interactive","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"Use tidync() hyper_filter() discern variables dimensions available, craft axis-filtering expressions value index. (Use name variable LHS target , use name filter value special name index filter index). grid “virtual table” sense database source. ’s possible activate grid via variable within , variables available default. Grids identifiers based dimensions defined , use .e. “D1,D0” can otherwise activated count identifier (starting 1). “D0” identifier, matches internal 0-based indexing identity used NetCDF . Please note hyper_filter() expressions must unique, unlike dplyr::filter() load multiple comparisons one. dplyr filter can load multiple comparisons: hyper_filter must load one named expression.","code":"filename <- system.file(\"extdata/argo/MD5903593_001.nc\", package = \"tidync\") ## discover the available entities, and the active grid's dimensions and variables tidync(filename) #>  #> Data Source (1): MD5903593_001.nc ... #>  #> Grids (16) <dimension family> : <associated variables>  #>  #> [1]   D0,D9,D11,D8 : SCIENTIFIC_CALIB_DATE #> [2]   D6,D9,D11,D8 : PARAMETER #> [3]   D7,D9,D11,D8 : SCIENTIFIC_CALIB_EQUATION, SCIENTIFIC_CALIB_COEFFICIENT, SCIENTIFIC_CALIB_COMMENT #> [4]   D6,D9,D8     : STATION_PARAMETERS #> [5]   D10,D8       : PRES, PRES_QC, PRES_ADJUSTED, PRES_ADJUSTED_QC, PRES_ADJUSTED_ERROR, TEMP, TEMP_QC, TEMP_ADJUSTED, TEMP_ADJUSTED_QC, TEMP_ADJUSTED_ERROR, PSAL, PSAL_QC, PSAL_ADJUSTED, PSAL_ADJUSTED_QC, PSAL_ADJUSTED_ERROR, DOXY, DOXY_QC, DOXY_ADJUSTED, DOXY_ADJUSTED_QC, DOXY_ADJUSTED_ERROR, CHLA, CHLA_QC, CHLA_ADJUSTED, CHLA_ADJUSTED_QC, CHLA_ADJUSTED_ERROR, BBP700, BBP700_QC, BBP700_ADJUSTED, BBP700_ADJUSTED_QC, BBP700_ADJUSTED_ERROR, NITRATE, NITRATE_QC, NITRATE_ADJUSTED, NITRATE_ADJUSTED_QC, NITRATE_ADJUSTED_ERROR    **ACTIVE GRID** ( 986  values per variable) #> [6]   D1,D8        : DATA_CENTRE #> [7]   D2,D8        : DATA_STATE_INDICATOR, WMO_INST_TYPE #> [8]   D3,D8        : PLATFORM_NUMBER, POSITIONING_SYSTEM #> [9]   D5,D8        : DC_REFERENCE, PLATFORM_TYPE, FLOAT_SERIAL_NO, FIRMWARE_VERSION #> [10]   D6,D8        : PROJECT_NAME, PI_NAME #> [11]   D7,D8        : VERTICAL_SAMPLING_SCHEME #> [12]   D9,D8        : PARAMETER_DATA_MODE #> [13]   D0           : REFERENCE_DATE_TIME, DATE_CREATION, DATE_UPDATE #> [14]   D2           : FORMAT_VERSION, HANDBOOK_VERSION #> [15]   D5           : DATA_TYPE #> [16]   D8           : CYCLE_NUMBER, DIRECTION, DATA_MODE, JULD, JULD_QC, JULD_LOCATION, LATITUDE, LONGITUDE, POSITION_QC, CONFIG_MISSION_NUMBER, PROFILE_PRES_QC, PROFILE_TEMP_QC, PROFILE_PSAL_QC, PROFILE_DOXY_QC, PROFILE_CHLA_QC, PROFILE_BBP700_QC, PROFILE_NITRATE_QC #>  #> Dimensions 14 (2 active):  #>    #>   dim   name     length   min   max start count  dmin  dmax unlim coord_dim  #>   <chr> <chr>     <dbl> <dbl> <dbl> <int> <int> <dbl> <dbl> <lgl> <lgl>      #> 1 D8    N_PROF        2     1     2     1     2     1     2 FALSE FALSE      #> 2 D10   N_LEVELS    493     1   493     1   493     1   493 FALSE FALSE      #>    #> Inactive dimensions: #>    #>    dim   name       length   min   max unlim coord_dim  #>    <chr> <chr>       <dbl> <dbl> <dbl> <lgl> <lgl>      #>  1 D0    DATE_TIME      14     1    14 FALSE FALSE      #>  2 D1    STRING2         2     1     2 FALSE FALSE      #>  3 D2    STRING4         4     1     4 FALSE FALSE      #>  4 D3    STRING8         8     1     8 FALSE FALSE      #>  5 D4    STRING16       16    NA    NA FALSE FALSE      #>  6 D5    STRING32       32     1    32 FALSE FALSE      #>  7 D6    STRING64       64     1    64 FALSE FALSE      #>  8 D7    STRING256     256     1   256 FALSE FALSE      #>  9 D9    N_PARAM         7     1     7 FALSE FALSE      #> 10 D11   N_CALIB         1     1     1 FALSE FALSE      #> 11 D12   N_HISTORY       0    NA    NA TRUE  FALSE      #> 12 D13   N_VALUES41     41    NA    NA FALSE FALSE ## activate a different grid grid_identifier <- \"D7,D9,D11,D8\" tidync(filename) %>% activate(grid_identifier) #>  #> Data Source (1): MD5903593_001.nc ... #>  #> Grids (16) <dimension family> : <associated variables>  #>  #> [1]   D0,D9,D11,D8 : SCIENTIFIC_CALIB_DATE #> [2]   D6,D9,D11,D8 : PARAMETER #> [3]   D7,D9,D11,D8 : SCIENTIFIC_CALIB_EQUATION, SCIENTIFIC_CALIB_COEFFICIENT, SCIENTIFIC_CALIB_COMMENT    **ACTIVE GRID** ( 3584  values per variable) #> [4]   D6,D9,D8     : STATION_PARAMETERS #> [5]   D10,D8       : PRES, PRES_QC, PRES_ADJUSTED, PRES_ADJUSTED_QC, PRES_ADJUSTED_ERROR, TEMP, TEMP_QC, TEMP_ADJUSTED, TEMP_ADJUSTED_QC, TEMP_ADJUSTED_ERROR, PSAL, PSAL_QC, PSAL_ADJUSTED, PSAL_ADJUSTED_QC, PSAL_ADJUSTED_ERROR, DOXY, DOXY_QC, DOXY_ADJUSTED, DOXY_ADJUSTED_QC, DOXY_ADJUSTED_ERROR, CHLA, CHLA_QC, CHLA_ADJUSTED, CHLA_ADJUSTED_QC, CHLA_ADJUSTED_ERROR, BBP700, BBP700_QC, BBP700_ADJUSTED, BBP700_ADJUSTED_QC, BBP700_ADJUSTED_ERROR, NITRATE, NITRATE_QC, NITRATE_ADJUSTED, NITRATE_ADJUSTED_QC, NITRATE_ADJUSTED_ERROR #> [6]   D1,D8        : DATA_CENTRE #> [7]   D2,D8        : DATA_STATE_INDICATOR, WMO_INST_TYPE #> [8]   D3,D8        : PLATFORM_NUMBER, POSITIONING_SYSTEM #> [9]   D5,D8        : DC_REFERENCE, PLATFORM_TYPE, FLOAT_SERIAL_NO, FIRMWARE_VERSION #> [10]   D6,D8        : PROJECT_NAME, PI_NAME #> [11]   D7,D8        : VERTICAL_SAMPLING_SCHEME #> [12]   D9,D8        : PARAMETER_DATA_MODE #> [13]   D0           : REFERENCE_DATE_TIME, DATE_CREATION, DATE_UPDATE #> [14]   D2           : FORMAT_VERSION, HANDBOOK_VERSION #> [15]   D5           : DATA_TYPE #> [16]   D8           : CYCLE_NUMBER, DIRECTION, DATA_MODE, JULD, JULD_QC, JULD_LOCATION, LATITUDE, LONGITUDE, POSITION_QC, CONFIG_MISSION_NUMBER, PROFILE_PRES_QC, PROFILE_TEMP_QC, PROFILE_PSAL_QC, PROFILE_DOXY_QC, PROFILE_CHLA_QC, PROFILE_BBP700_QC, PROFILE_NITRATE_QC #>  #> Dimensions 14 (4 active):  #>    #>   dim   name      length   min   max start count  dmin  dmax unlim coord_dim  #>   <chr> <chr>      <dbl> <dbl> <dbl> <int> <int> <dbl> <dbl> <lgl> <lgl>      #> 1 D7    STRING256    256     1   256     1   256     1   256 FALSE FALSE      #> 2 D8    N_PROF         2     1     2     1     2     1     2 FALSE FALSE      #> 3 D9    N_PARAM        7     1     7     1     7     1     7 FALSE FALSE      #> 4 D11   N_CALIB        1     1     1     1     1     1     1 FALSE FALSE      #>    #> Inactive dimensions: #>    #>    dim   name       length   min   max unlim coord_dim  #>    <chr> <chr>       <dbl> <dbl> <dbl> <lgl> <lgl>      #>  1 D0    DATE_TIME      14     1    14 FALSE FALSE      #>  2 D1    STRING2         2     1     2 FALSE FALSE      #>  3 D2    STRING4         4     1     4 FALSE FALSE      #>  4 D3    STRING8         8     1     8 FALSE FALSE      #>  5 D4    STRING16       16    NA    NA FALSE FALSE      #>  6 D5    STRING32       32     1    32 FALSE FALSE      #>  7 D6    STRING64       64     1    64 FALSE FALSE      #>  8 D10   N_LEVELS      493     1   493 FALSE FALSE      #>  9 D12   N_HISTORY       0    NA    NA TRUE  FALSE      #> 10 D13   N_VALUES41     41    NA    NA FALSE FALSE ## pass named expressions to subset dimension by value or index (step) (subs <- tidync(filename) %>% hyper_filter(N_PROF = N_PROF > 1, STRING256 = index > 10)) #> Warning in hyper_filter.tidync(., N_PROF = N_PROF > 1, STRING256 = index > : #> 'STRING256' not found in active grid, ignoring #>  #> Data Source (1): MD5903593_001.nc ... #>  #> Grids (16) <dimension family> : <associated variables>  #>  #> [1]   D0,D9,D11,D8 : SCIENTIFIC_CALIB_DATE #> [2]   D6,D9,D11,D8 : PARAMETER #> [3]   D7,D9,D11,D8 : SCIENTIFIC_CALIB_EQUATION, SCIENTIFIC_CALIB_COEFFICIENT, SCIENTIFIC_CALIB_COMMENT #> [4]   D6,D9,D8     : STATION_PARAMETERS #> [5]   D10,D8       : PRES, PRES_QC, PRES_ADJUSTED, PRES_ADJUSTED_QC, PRES_ADJUSTED_ERROR, TEMP, TEMP_QC, TEMP_ADJUSTED, TEMP_ADJUSTED_QC, TEMP_ADJUSTED_ERROR, PSAL, PSAL_QC, PSAL_ADJUSTED, PSAL_ADJUSTED_QC, PSAL_ADJUSTED_ERROR, DOXY, DOXY_QC, DOXY_ADJUSTED, DOXY_ADJUSTED_QC, DOXY_ADJUSTED_ERROR, CHLA, CHLA_QC, CHLA_ADJUSTED, CHLA_ADJUSTED_QC, CHLA_ADJUSTED_ERROR, BBP700, BBP700_QC, BBP700_ADJUSTED, BBP700_ADJUSTED_QC, BBP700_ADJUSTED_ERROR, NITRATE, NITRATE_QC, NITRATE_ADJUSTED, NITRATE_ADJUSTED_QC, NITRATE_ADJUSTED_ERROR    **ACTIVE GRID** ( 986  values per variable) #> [6]   D1,D8        : DATA_CENTRE #> [7]   D2,D8        : DATA_STATE_INDICATOR, WMO_INST_TYPE #> [8]   D3,D8        : PLATFORM_NUMBER, POSITIONING_SYSTEM #> [9]   D5,D8        : DC_REFERENCE, PLATFORM_TYPE, FLOAT_SERIAL_NO, FIRMWARE_VERSION #> [10]   D6,D8        : PROJECT_NAME, PI_NAME #> [11]   D7,D8        : VERTICAL_SAMPLING_SCHEME #> [12]   D9,D8        : PARAMETER_DATA_MODE #> [13]   D0           : REFERENCE_DATE_TIME, DATE_CREATION, DATE_UPDATE #> [14]   D2           : FORMAT_VERSION, HANDBOOK_VERSION #> [15]   D5           : DATA_TYPE #> [16]   D8           : CYCLE_NUMBER, DIRECTION, DATA_MODE, JULD, JULD_QC, JULD_LOCATION, LATITUDE, LONGITUDE, POSITION_QC, CONFIG_MISSION_NUMBER, PROFILE_PRES_QC, PROFILE_TEMP_QC, PROFILE_PSAL_QC, PROFILE_DOXY_QC, PROFILE_CHLA_QC, PROFILE_BBP700_QC, PROFILE_NITRATE_QC #>  #> Dimensions 14 (2 active):  #>    #>   dim   name     length   min   max start count  dmin  dmax unlim coord_dim  #>   <chr> <chr>     <dbl> <dbl> <dbl> <int> <int> <dbl> <dbl> <lgl> <lgl>      #> 1 D8    N_PROF        2     1     2     2     1     2     2 FALSE FALSE      #> 2 D10   N_LEVELS    493     1   493     1   493     1   493 FALSE FALSE      #>    #> Inactive dimensions: #>    #>    dim   name       length   min   max unlim coord_dim  #>    <chr> <chr>       <dbl> <dbl> <dbl> <lgl> <lgl>      #>  1 D0    DATE_TIME      14     1    14 FALSE FALSE      #>  2 D1    STRING2         2     1     2 FALSE FALSE      #>  3 D2    STRING4         4     1     4 FALSE FALSE      #>  4 D3    STRING8         8     1     8 FALSE FALSE      #>  5 D4    STRING16       16    NA    NA FALSE FALSE      #>  6 D5    STRING32       32     1    32 FALSE FALSE      #>  7 D6    STRING64       64     1    64 FALSE FALSE      #>  8 D7    STRING256     256     1   256 FALSE FALSE      #>  9 D9    N_PARAM         7     1     7 FALSE FALSE      #> 10 D11   N_CALIB         1     1     1 FALSE FALSE      #> 11 D12   N_HISTORY       0    NA    NA TRUE  FALSE      #> 12 D13   N_VALUES41     41    NA    NA FALSE FALSE ## with the saved filtering from above, choose data frame or tbl_cube output ## optionally with only selected variables subs %>% hyper_tibble() #> # A tibble: 493 × 35 #>       PRES PRES_QC PRES_ADJUSTED PRES_ADJUSTED_QC PRES_ADJUSTED_ERROR   TEMP #>      <dbl> <chr>           <dbl> <chr>                          <dbl>  <dbl> #>  1  7.7000 1              7.7900 1                             2.4000 13.184 #>  2 11.800  1             11.890  1                             2.4000 13.184 #>  3 16.300  1             16.390  1                             2.4000 13.184 #>  4 21.600  1             21.690  1                             2.4000 13.184 #>  5 26.700  1             26.790  1                             2.4000 13.186 #>  6 31.700  1             31.790  1                             2.4000 13.186 #>  7 36.600  1             36.690  1                             2.4000 13.187 #>  8 41.400  1             41.490  1                             2.4000 13.187 #>  9 46.5    1             46.590  1                             2.4000 13.187 #> 10 51.800  1             51.890  1                             2.4000 13.187 #> # ℹ 483 more rows #> # ℹ 29 more variables: TEMP_QC <chr>, TEMP_ADJUSTED <dbl>, #> #   TEMP_ADJUSTED_QC <chr>, TEMP_ADJUSTED_ERROR <dbl>, PSAL <dbl>, #> #   PSAL_QC <chr>, PSAL_ADJUSTED <dbl>, PSAL_ADJUSTED_QC <chr>, #> #   PSAL_ADJUSTED_ERROR <dbl>, DOXY <dbl>, DOXY_QC <chr>, DOXY_ADJUSTED <dbl>, #> #   DOXY_ADJUSTED_QC <chr>, DOXY_ADJUSTED_ERROR <dbl>, CHLA <dbl>, #> #   CHLA_QC <chr>, CHLA_ADJUSTED <dbl>, CHLA_ADJUSTED_QC <chr>, … subs %>% hyper_tbl_cube(select_var = c(\"PRES\", \"PRES_QC\", \"PSAL_ADJUSTED\")) #> $mets #> Class: tidync_data (list of tidync data arrays) #> Variables (3): 'PRES', 'PRES_QC', 'PSAL_ADJUSTED' #> Dimension (0): N_LEVELS,N_PROF () #> Source: /perm_storage/home/mdsumner/R/x86_64-pc-linux-gnu-library/4.4/tidync/extdata/argo/MD5903593_001.nc #>  #> $dims #> $dims$N_LEVELS #>   [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18 #>  [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36 #>  [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54 #>  [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72 #>  [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 #>  [91]  91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 106 107 108 #> [109] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 #> [127] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 #> [145] 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 #> [163] 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 #> [181] 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 #> [199] 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 #> [217] 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 #> [235] 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 #> [253] 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 #> [271] 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 #> [289] 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 #> [307] 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 #> [325] 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 #> [343] 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 #> [361] 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 #> [379] 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 #> [397] 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 #> [415] 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 #> [433] 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 #> [451] 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 #> [469] 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 #> [487] 487 488 489 490 491 492 493 #>  #> $dims$N_PROF #> [1] 2 #>  #>  #> attr(,\"class\") #> [1] \"tbl_cube\" df %>% dplyr::filter(longitude > 100, longitude < 150) tidync(filename) %>% hyper_filter(longitude = longitude > 100 & longitude < 150)"},{"path":"https://docs.ropensci.org/tidync/index.html","id":"extractive","dir":"","previous_headings":"Usage","what":"Extractive","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"Use learned interactively extract data, either data frame raw-array (hyper slice) form. ’s important actual request data extraction expressions result efficient size (don’t try data frame version 20Gb ROMs variable …). Use interactive modes determine likely size output receive. Functions seamlessly build actual index values required NetCDF library. can used debug process define tools extraction. Currently hyper_* function can take filtering expressions, ’s obvious good idea . See vignettes :","code":"## we'll see a column for the variable activated, and whatever other  ## variables the grid has tidync(filename) %>% activate(\"JULD\") %>%    hyper_filter(N_PROF = N_PROF == 1) %>%    hyper_tibble() #> # A tibble: 1 × 1 #>     JULD #>    <dbl> #> 1 22719. ## native array form, we'll see a (list of) R arrays with a dimension for  ## each seen by tidync(filename) %>% activate(\"JULD\") tidync(filename) %>% activate(\"JULD\") %>%    hyper_filter(N_PROF = N_PROF == 1) %>%    hyper_array() #> Class: tidync_data (list of tidync data arrays) #> Variables (1): 'JULD' #> Dimension (0): N_PROF () #> Source: /perm_storage/home/mdsumner/R/x86_64-pc-linux-gnu-library/4.4/tidync/extdata/argo/MD5903593_001.nc browseVignettes(package = \"tidync\")"},{"path":"https://docs.ropensci.org/tidync/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"Please get touch specific workflows tidync providing. ’s lot room improvement! can’t “grouped filters”” (.e. polygon-overlay extraction), ’s works compound types supported, though see “rhdf5” branch Github NetCDF groups exposed (groups like “files within file”, analogous file system directory) ’m interested lighter rawer access NetCDF library, ’ve explored may may good idea: https://github.com/hypertidy/ncapi","code":""},{"path":"https://docs.ropensci.org/tidync/index.html","id":"terminology","dir":"","previous_headings":"","what":"Terminology","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"slab, hyperslab - array variable may read NetCDF shape, grid - set dimensions define variables NetCDF activation - choice given grid apply subsetting read operations ","code":""},{"path":"https://docs.ropensci.org/tidync/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"A Tidy Approach to NetCDF Data Exploration and Extraction","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/activate.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate a NetCDF grid — activate","title":"Activate a NetCDF grid — activate","text":"grid NetCDF particular shape size available array variables, consists sets dimensions. activate grid set context downstream operations, querying, summarizing reading data. sense performing operations one grid time, multiple variables may exist single grid. may one significant grid source many, individual dimensions grids.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/activate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate a NetCDF grid — activate","text":"","code":"activate(.data, what, ..., select_var = NULL)  # S3 method for class 'tidync' activate(.data, what, ..., select_var = NULL)  # S3 method for class 'tidync' active(x)  active(x)  # Default S3 method active(x)  active(x) <- value  # Default S3 method active(x) <- value"},{"path":"https://docs.ropensci.org/tidync/reference/activate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate a NetCDF grid — activate","text":".data NetCDF object name grid variable ... reserved, currently ignored select_var optional argument set selected state variable/s name x NetCDF object value name grid variable active","code":""},{"path":"https://docs.ropensci.org/tidync/reference/activate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Activate a NetCDF grid — activate","text":"NetCDF object","code":""},{"path":"https://docs.ropensci.org/tidync/reference/activate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Activate a NetCDF grid — activate","text":"may one grid one always activated default. grid may activated name form 'D1,D0' one numbered dimensions indicates grid. grid definition names printed part summary tidync object may obtained directly hyper_grids() tidync object. Activation grid sets context downstream operations (slicing reading data) NetCDF, may several grids single source activation allows different choice available variables.  default largest grid activated. activated, downstream tasks apply set variables exist grid. activate() called variable name, puts variable first. function active() gets sets active grid. restrict ultimate read particular variables use select_var argument hyper_filter(), hyper_tibble() hyper_tbl_cube(). Scalar variables currently available tidync, obvious activation occur scalars, future perhaps activate(\"S\") right way forward.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tidync/reference/activate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Activate a NetCDF grid — activate","text":"","code":"if (!tolower(Sys.info()[[\"sysname\"]]) == \"sunos\") {  l3file <- \"S20080012008031.L3m_MO_CHL_chlor_a_9km.nc\"  rnc <- tidync(system.file(\"extdata\", \"oceandata\", l3file,  package = \"tidync\"))  activate(rnc, \"palette\")   ## extract available grid names  hyper_grids(rnc) } #> # A tibble: 4 × 4 #>   grid  ndims nvars active #>   <chr> <int> <int> <lgl>  #> 1 D1,D0     2     1 TRUE   #> 2 D3,D2     2     1 FALSE  #> 3 D0        1     1 FALSE  #> 4 D1        1     1 FALSE"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract NetCDF data as an array — hyper_array","title":"Extract NetCDF data as an array — hyper_array","text":"Extract raw array data list  one arrays. can entire variable/s dimension-slicing using hyper_filter() expressions. delay-breaking function causes data read source R native arrays. list arrays lightly classed tidync_data, methods print() tidync().","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract NetCDF data as an array — hyper_array","text":"","code":"hyper_array(   x,   select_var = NULL,   ...,   raw_datavals = FALSE,   force = FALSE,   drop = TRUE )  hyper_slice(   x,   select_var = NULL,   ...,   raw_datavals = FALSE,   force = FALSE,   drop = TRUE )  # S3 method for class 'tidync' hyper_array(   x,   select_var = NULL,   ...,   raw_datavals = FALSE,   force = FALSE,   drop = TRUE )  # S3 method for class 'character' hyper_array(   x,   select_var = NULL,   ...,   raw_datavals = FALSE,   force = FALSE,   drop = TRUE )"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract NetCDF data as an array — hyper_array","text":"x NetCDF file, connection object, tidync object select_var optional vector variable names select ... passed hyper_filter() raw_datavals logical control whether scaling NetCDF applied force ignore caveats large extraction just drop collapse degenerate dimensions, defaults TRUE","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_array.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract NetCDF data as an array — hyper_array","text":"function hyper_array() used hyper_tibble() hyper_tbl_cube() actually extract data arrays NetCDF, result particularly large check made user-opportunity cancel. controllable option getOption('tidync.large.data.check'), can set never check options(tidync.large.data.check = FALSE). function hyper_array() act existing tidync object source string. default variables active grid returned, use select_var specify one desired variables. transforms stored list tables attribute transforms, access hyper_transforms().","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tidync/reference/hyper_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract NetCDF data as an array — hyper_array","text":"","code":"f <- \"S20080012008031.L3m_MO_CHL_chlor_a_9km.nc\" l3file <- system.file(\"extdata/oceandata\", f, package= \"tidync\")  ## extract a raw list by filtered dimension library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union araw1 <- tidync(l3file) %>%  hyper_filter(lat = between(lat, -78, -75.8),                lon = between(lon, 165, 171)) %>%  hyper_array()  araw <- tidync(l3file) %>%           hyper_filter(lat = abs(lat) < 10,                       lon = index < 100) %>%   hyper_array()  ## hyper_array will pass the expressions to hyper_filter braw <- tidync(l3file) %>%    hyper_array(lat = abs(lat) < 10, lon = index < 100)  ## get the transforms tables (the axis coordinates) lapply(attr(braw, \"transforms\"),     function(x) nrow(dplyr::filter(x, selected))) #> $lon #> [1] 99 #>  #> $lat #> [1] 240 #>  ## the selected axis coordinates should match in order and in size lapply(braw, dim) #> $chlor_a #> [1]  99 240 #>"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset NetCDF variable by expression — hyper_filter","title":"Subset NetCDF variable by expression — hyper_filter","text":"hyper_filter() acts tidync object matching one filtering expressions like dplyr::filter. allows us lazily specify subset NetCDF array without pulling  data. modified object may printed see effects subsetting, saved use.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset NetCDF variable by expression — hyper_filter","text":"","code":"hyper_filter(.x, ...)  # S3 method for class 'tidync' hyper_filter(.x, ...)"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset NetCDF variable by expression — hyper_filter","text":".x NetCDF file, connection object, tidync object ... currently ignored","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset NetCDF variable by expression — hyper_filter","text":"data frame","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subset NetCDF variable by expression — hyper_filter","text":"function hyper_filter() act existing tidync object source string. Filter arguments must named per dimensions variable form dimname = dimname < 10. restrictive variant dplyr::filter(), syntax like dplyr::mutate(). ensures element named, know dimension apply , also expression evaluated can extra work nuanced test. special columns provided axis, one 'index' exact matching can done position, ignore actual value coordinate. means can use form like dimname = index < 10 subset position array index, without necessarily knowing values along dimension.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset NetCDF variable by expression — hyper_filter","text":"","code":"f <- \"S20080012008031.L3m_MO_CHL_chlor_a_9km.nc\" l3file <- system.file(\"extdata/oceandata\", f, package= \"tidync\") ## filter by value tidync(l3file) %>% hyper_filter(lon = lon < 100) #>  #> Data Source (1): S20080012008031.L3m_MO_CHL_chlor_a_9km.nc ... #>  #> Grids (4) <dimension family> : <associated variables>  #>  #> [1]   D1,D0 : chlor_a    **ACTIVE GRID** ( 9331200  values per variable) #> [2]   D3,D2 : palette #> [3]   D0    : lat #> [4]   D1    : lon #>  #> Dimensions 4 (2 active):  #>    #>   dim   name  length    min   max start count   dmin  dmax unlim coord_dim  #>   <chr> <chr>  <dbl>  <dbl> <dbl> <int> <int>  <dbl> <dbl> <lgl> <lgl>      #> 1 D0    lat     2160  -90.0  90.0     1  2160  -90.0  90.0 FALSE TRUE       #> 2 D1    lon     4320 -180.  180.      1  3360 -180.  100.  FALSE TRUE       #>    #> Inactive dimensions: #>    #>   dim   name          length   min   max unlim coord_dim  #>   <chr> <chr>          <dbl> <dbl> <dbl> <lgl> <lgl>      #> 1 D2    rgb                3     1     3 FALSE FALSE      #> 2 D3    eightbitcolor    256     1   256 FALSE FALSE      ## filter by index tidync(l3file) %>% hyper_filter(lon = index < 100) #>  #> Data Source (1): S20080012008031.L3m_MO_CHL_chlor_a_9km.nc ... #>  #> Grids (4) <dimension family> : <associated variables>  #>  #> [1]   D1,D0 : chlor_a    **ACTIVE GRID** ( 9331200  values per variable) #> [2]   D3,D2 : palette #> [3]   D0    : lat #> [4]   D1    : lon #>  #> Dimensions 4 (2 active):  #>    #>   dim   name  length    min   max start count   dmin   dmax unlim coord_dim  #>   <chr> <chr>  <dbl>  <dbl> <dbl> <int> <int>  <dbl>  <dbl> <lgl> <lgl>      #> 1 D0    lat     2160  -90.0  90.0     1  2160  -90.0   90.0 FALSE TRUE       #> 2 D1    lon     4320 -180.  180.      1    99 -180.  -172.  FALSE TRUE       #>    #> Inactive dimensions: #>    #>   dim   name          length   min   max unlim coord_dim  #>   <chr> <chr>          <dbl> <dbl> <dbl> <lgl> <lgl>      #> 1 D2    rgb                3     1     3 FALSE FALSE      #> 2 D3    eightbitcolor    256     1   256 FALSE FALSE       ## be careful that multiple comparisons must occur in one expression  tidync(l3file) %>% hyper_filter(lon = lon < 100 & lon > 50) #>  #> Data Source (1): S20080012008031.L3m_MO_CHL_chlor_a_9km.nc ... #>  #> Grids (4) <dimension family> : <associated variables>  #>  #> [1]   D1,D0 : chlor_a    **ACTIVE GRID** ( 9331200  values per variable) #> [2]   D3,D2 : palette #> [3]   D0    : lat #> [4]   D1    : lon #>  #> Dimensions 4 (2 active):  #>    #>   dim   name  length    min   max start count  dmin  dmax unlim coord_dim  #>   <chr> <chr>  <dbl>  <dbl> <dbl> <int> <int> <dbl> <dbl> <lgl> <lgl>      #> 1 D0    lat     2160  -90.0  90.0     1  2160 -90.0  90.0 FALSE TRUE       #> 2 D1    lon     4320 -180.  180.   2761   600  50.0 100.  FALSE TRUE       #>    #> Inactive dimensions: #>    #>   dim   name          length   min   max unlim coord_dim  #>   <chr> <chr>          <dbl> <dbl> <dbl> <lgl> <lgl>      #> 1 D2    rgb                3     1     3 FALSE FALSE      #> 2 D3    eightbitcolor    256     1   256 FALSE FALSE       ## filter in combination/s tidync(l3file) %>% hyper_filter(lat = abs(lat) < 10, lon = index < 100) #>  #> Data Source (1): S20080012008031.L3m_MO_CHL_chlor_a_9km.nc ... #>  #> Grids (4) <dimension family> : <associated variables>  #>  #> [1]   D1,D0 : chlor_a    **ACTIVE GRID** ( 9331200  values per variable) #> [2]   D3,D2 : palette #> [3]   D0    : lat #> [4]   D1    : lon #>  #> Dimensions 4 (2 active):  #>    #>   dim   name  length    min   max start count    dmin    dmax unlim coord_dim  #>   <chr> <chr>  <dbl>  <dbl> <dbl> <int> <int>   <dbl>   <dbl> <lgl> <lgl>      #> 1 D0    lat     2160  -90.0  90.0   961   240   -9.96    9.96 FALSE TRUE       #> 2 D1    lon     4320 -180.  180.      1    99 -180.   -172.   FALSE TRUE       #>    #> Inactive dimensions: #>    #>   dim   name          length   min   max unlim coord_dim  #>   <chr> <chr>          <dbl> <dbl> <dbl> <lgl> <lgl>      #> 1 D2    rgb                3     1     3 FALSE FALSE      #> 2 D3    eightbitcolor    256     1   256 FALSE FALSE"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tbl_cube.html","id":null,"dir":"Reference","previous_headings":"","what":"A dplyr cube tbl — hyper_tbl_cube","title":"A dplyr cube tbl — hyper_tbl_cube","text":"Produce tbl_cube NetCDF. delay-breaking function causes data read source tbl cube format defined dplyr package.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tbl_cube.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dplyr cube tbl — hyper_tbl_cube","text":"","code":"hyper_tbl_cube(x, ..., force = FALSE)  # S3 method for class 'tidync' hyper_tbl_cube(x, ..., force = FALSE)  # S3 method for class 'character' hyper_tbl_cube(x, ..., force = FALSE)"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tbl_cube.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A dplyr cube tbl — hyper_tbl_cube","text":"x tidync object ... arguments hyper_filter() force ignore caveats large extraction just ","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tbl_cube.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A dplyr cube tbl — hyper_tbl_cube","text":"tbl_cube dplyr::tbl_cube","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tbl_cube.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A dplyr cube tbl — hyper_tbl_cube","text":"size extraction checked quite large user-controlled prompt proceed cancel. can disabled options(tidync.large.data.check = FALSE) please see hyper_array() details. tbl cube general arbitrarily-sized array can used tidyverse functionality. Dimension coordinates stored tbl cube, derived grid transforms.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tbl_cube.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A dplyr cube tbl — hyper_tbl_cube","text":"","code":"f <- \"S20080012008031.L3m_MO_CHL_chlor_a_9km.nc\" l3file <- system.file(\"extdata/oceandata\", f, package= \"tidync\") (cube <- hyper_tbl_cube(tidync(l3file) %>% activate(chlor_a), lon = lon > 107, lat = abs(lat) < 30)) #> Source: local array [630,720 x 2] #> D: lon [dbl, 4320] #> D: lat [dbl, 2160] #> M: chlor_a [dbl[,720]] ufile <- system.file(\"extdata\", \"unidata\", \"test_hgroups.nc\",   package = \"tidync\", mustWork = TRUE)   ## some versions of NetCDF don't support this file ## (4.1.3 tidync/issues/82) group_nc <- try(tidync(ufile), silent = TRUE) if (!inherits(group_nc, \"try-error\")) {  res <-  hyper_tbl_cube(tidync(ufile))  print(res) } else {  ## the error was  writeLines(c(group_nc)) } #> Source: local array [74 x 1] #> D: recNum [int, 74] #> M: UTC_time [chr[1d]]"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract NetCDF data as an expanded table. — hyper_tibble","title":"Extract NetCDF data as an expanded table. — hyper_tibble","text":"Extract raw array data expanded data frame. can entire variable/s dimension-slicing using hyper_filter() expressions dimension values expanded appropriately element arrays (one row per element).","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract NetCDF data as an expanded table. — hyper_tibble","text":"","code":"hyper_tibble(x, ..., na.rm = TRUE, force = FALSE)  # S3 method for class 'character' hyper_tibble(x, ..., na.rm = TRUE, force = FALSE)  # S3 method for class 'tidync' hyper_tibble(x, ..., na.rm = TRUE, force = FALSE)"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract NetCDF data as an expanded table. — hyper_tibble","text":"x NetCDF file, connection object, tidync object ... arguments `hyper_filter“ na.rm TRUE rows included output variables NA force ignore caveats large extraction just ","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract NetCDF data as an expanded table. — hyper_tibble","text":"tbl_df","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tibble.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract NetCDF data as an expanded table. — hyper_tibble","text":"size extraction checked quite large user-controlled prompt proceed cancel. can disabled options(tidync.large.data.check = FALSE) please see hyper_array() details. function hyper_tibble() act existing tidync object source string. default variables active grid returned, use select_var limit.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tidync/reference/hyper_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract NetCDF data as an expanded table. — hyper_tibble","text":"","code":"l3file <- \"S20080012008031.L3m_MO_CHL_chlor_a_9km.nc\" f <- system.file(\"extdata\", \"oceandata\", l3file, package= \"tidync\") rnc <- tidync(f) hyper_filter(rnc) #>  #> Data Source (1): S20080012008031.L3m_MO_CHL_chlor_a_9km.nc ... #>  #> Grids (4) <dimension family> : <associated variables>  #>  #> [1]   D1,D0 : chlor_a    **ACTIVE GRID** ( 9331200  values per variable) #> [2]   D3,D2 : palette #> [3]   D0    : lat #> [4]   D1    : lon #>  #> Dimensions 4 (2 active):  #>    #>   dim   name  length    min   max start count   dmin  dmax unlim coord_dim  #>   <chr> <chr>  <dbl>  <dbl> <dbl> <int> <int>  <dbl> <dbl> <lgl> <lgl>      #> 1 D0    lat     2160  -90.0  90.0     1  2160  -90.0  90.0 FALSE TRUE       #> 2 D1    lon     4320 -180.  180.      1  4320 -180.  180.  FALSE TRUE       #>    #> Inactive dimensions: #>    #>   dim   name          length   min   max unlim coord_dim  #>   <chr> <chr>          <dbl> <dbl> <dbl> <lgl> <lgl>      #> 1 D2    rgb                3     1     3 FALSE FALSE      #> 2 D3    eightbitcolor    256     1   256 FALSE FALSE      library(dplyr) lapply(hyper_array(f, lat = lat > 0, lon = index > 3000), dim) #> $chlor_a #> [1] 1320 1080 #>    ht <- hyper_tibble(rnc) %>%  filter(!is.na(chlor_a)) ht #> # A tibble: 11 × 3 #>    chlor_a   lon   lat #>      <dbl> <dbl> <dbl> #>  1   1.71   170. -76.0 #>  2   1.71   170. -76.0 #>  3   1.71   171. -76.0 #>  4   1.71   171. -76.0 #>  5   1.71   171. -76.0 #>  6   0.759  165. -77.4 #>  7   0.759  165. -77.4 #>  8   0.759  165. -77.4 #>  9   0.759  165. -77.4 #> 10   0.759  165. -77.4 #> 11   0.759  166. -77.4 library(ggplot2) ggplot(ht %>% filter(!is.na(chlor_a)), aes(x = lon, y = lat, fill = chlor_a)) + geom_tile()"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_transforms.html","id":null,"dir":"Reference","previous_headings":"","what":"Axis transforms — hyper_transforms","title":"Axis transforms — hyper_transforms","text":"Axis 'transforms' data frames dimension NetCDF source. hyper_transforms returns list active transforms default,","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_transforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Axis transforms — hyper_transforms","text":"","code":"hyper_transforms(x, all = FALSE, ...)  # Default S3 method hyper_transforms(x, all = FALSE, ...)"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_transforms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Axis transforms — hyper_transforms","text":"x tidync object set TRUE return transforms, active ones ... ignored","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_transforms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Axis transforms — hyper_transforms","text":"list axis transforms","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_transforms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Axis transforms — hyper_transforms","text":"transform available name list, data frame coordinate dimension, index, 'selected' variable set filtering expressions hyper_filter used read-functions hyper_array hyper_tibble. Use hyper_transforms interrogate explore available dimension manually, development custom functions.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_transforms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Axis transforms — hyper_transforms","text":"","code":"l3file <- \"S20080012008031.L3m_MO_CHL_chlor_a_9km.nc\" f <- system.file(\"extdata\", \"oceandata\", l3file, package = \"tidync\") ax <- tidync(f) %>% hyper_transforms() names(ax) #> [1] \"lon\" \"lat\" lapply(ax, dim) #> $lon #> [1] 4320    6 #>  #> $lat #> [1] 2160    6 #>   ## this function returns the transforms tidync knows about for this source str(tidync(f)$transforms) #> List of 4 #>  $ lon          : tibble [4,320 × 6] (S3: tbl_df/tbl/data.frame) #>   ..$ lon      : num [1:4320] -180 -180 -180 -180 -180 ... #>   ..$ index    : int [1:4320] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ id       : int [1:4320] 1 1 1 1 1 1 1 1 1 1 ... #>   ..$ name     : chr [1:4320] \"lon\" \"lon\" \"lon\" \"lon\" ... #>   ..$ coord_dim: logi [1:4320] TRUE TRUE TRUE TRUE TRUE TRUE ... #>   ..$ selected : logi [1:4320] TRUE TRUE TRUE TRUE TRUE TRUE ... #>  $ lat          : tibble [2,160 × 6] (S3: tbl_df/tbl/data.frame) #>   ..$ lat      : num [1:2160] 90 89.9 89.8 89.7 89.6 ... #>   ..$ index    : int [1:2160] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ id       : int [1:2160] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ name     : chr [1:2160] \"lat\" \"lat\" \"lat\" \"lat\" ... #>   ..$ coord_dim: logi [1:2160] TRUE TRUE TRUE TRUE TRUE TRUE ... #>   ..$ selected : logi [1:2160] TRUE TRUE TRUE TRUE TRUE TRUE ... #>  $ eightbitcolor: tibble [256 × 6] (S3: tbl_df/tbl/data.frame) #>   ..$ eightbitcolor: int [1:256] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ index        : int [1:256] 1 2 3 4 5 6 7 8 9 10 ... #>   ..$ id           : int [1:256] 3 3 3 3 3 3 3 3 3 3 ... #>   ..$ name         : chr [1:256] \"eightbitcolor\" \"eightbitcolor\" \"eightbitcolor\" \"eightbitcolor\" ... #>   ..$ coord_dim    : logi [1:256] FALSE FALSE FALSE FALSE FALSE FALSE ... #>   ..$ selected     : logi [1:256] TRUE TRUE TRUE TRUE TRUE TRUE ... #>  $ rgb          : tibble [3 × 6] (S3: tbl_df/tbl/data.frame) #>   ..$ rgb      : int [1:3] 1 2 3 #>   ..$ index    : int [1:3] 1 2 3 #>   ..$ id       : int [1:3] 2 2 2 #>   ..$ name     : chr [1:3] \"rgb\" \"rgb\" \"rgb\" #>   ..$ coord_dim: logi [1:3] FALSE FALSE FALSE #>   ..$ selected : logi [1:3] TRUE TRUE TRUE names(hyper_transforms(tidync(f), all = TRUE)) #> [1] \"lon\"           \"lat\"           \"eightbitcolor\" \"rgb\""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid status — hyper_vars","title":"Grid status — hyper_vars","text":"Functions report current status active grid. Information active dimensions variables listed data frame multiple columns.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid status — hyper_vars","text":"","code":"hyper_vars(x, ...)  hyper_dims(x, ...)  hyper_grids(x, ...)"},{"path":"https://docs.ropensci.org/tidync/reference/hyper_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid status — hyper_vars","text":"x tidync object ... ignored","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid status — hyper_vars","text":"data frame","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_vars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grid status — hyper_vars","text":"dimensions variables active grid identified print method tidync object, functions exist provide information directly. hyper_vars() list ids, data type, name, dimension number, number attributes coordinate status variables currently active grid. hyper_dims() list names, lengths, start/count index, ids, status dimensions currently active grid. records currently active dimensions. hyper_grids() list names, number dimension, number variables active status grid source.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/hyper_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid status — hyper_vars","text":"","code":"f <- \"S20080012008031.L3m_MO_CHL_chlor_a_9km.nc\" l3file <- system.file(\"extdata/oceandata\", f, package= \"tidync\") tnc <- tidync(l3file) hyper_vars(tnc) #> # A tibble: 1 × 6 #>      id name    type     ndims natts dim_coord #>   <int> <chr>   <chr>    <int> <int> <lgl>     #> 1     0 chlor_a NC_FLOAT     2    10 FALSE     hyper_dims(tnc) #> # A tibble: 2 × 7 #>   name  length start count    id unlim coord_dim #>   <chr>  <dbl> <int> <int> <int> <lgl> <lgl>     #> 1 lon     4320     1  4320     1 FALSE TRUE      #> 2 lat     2160     1  2160     0 FALSE TRUE      hyper_dims(tnc %>% hyper_filter(lat = lat < 20)) #> # A tibble: 2 × 7 #>   name  length start count    id unlim coord_dim #>   <chr>  <dbl> <int> <int> <int> <lgl> <lgl>     #> 1 lon     4320     1  4320     1 FALSE TRUE      #> 2 lat     2160   841  1320     0 FALSE TRUE"},{"path":"https://docs.ropensci.org/tidync/reference/nc_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to get a variable from NetCDF. — nc_get","title":"Helper to get a variable from NetCDF. — nc_get","text":"exists can (internally) use file path, uri, open NetCDF connection (ncdf4 RNetCDF) simpler way.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/nc_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to get a variable from NetCDF. — nc_get","text":"","code":"nc_get(x, v, test = FALSE)"},{"path":"https://docs.ropensci.org/tidync/reference/nc_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to get a variable from NetCDF. — nc_get","text":"x file path, uri, NetCDF connection v variable name test true make sure connection can open, applied connections ","code":""},{"path":"https://docs.ropensci.org/tidync/reference/nc_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper to get a variable from NetCDF. — nc_get","text":"function just reads whole array. equivalent angstroms package function 'rawdata(x, varname)'.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync.html","id":null,"dir":"Reference","previous_headings":"","what":"Print tidync object — print.tidync","title":"Print tidync object — print.tidync","text":"Provide summary variables dimensions, organized 'grid' ('shape') summary slicing operations provided 'start' 'count' summaries dimension active grid.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print tidync object — print.tidync","text":"","code":"# S3 method for class 'tidync' print(x, ...)"},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print tidync object — print.tidync","text":"x NetCDF object ... reserved","code":""},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print tidync object — print.tidync","text":"See tidync detail object, hyper_vars programmatic access active grid's variable dimension information. print summary organized two sections, first available grids (sets dimensions) associated variables, second dimensions, separated active inactive. dimensions may active NetCDF sources. Individual active dimensions include following components: * 'dim'    - dimension label, D0, D1, D2, ... * 'name'   - dimension name * 'length' - size dimension * 'min'    - minimum value dimension * 'max' - maximum value dimension * 'start'  - start index subsetting * 'count'  - length subsetting index * 'dmin'   - minimum value subset dimension * 'dmax'   - maximum value subset dimension * 'unlim' indicates whether dimension unlimited (spread across files, usually time-step) * 'coord_dim' - indicates whether dimension coordinate-dimension (.e. listed 1-D grid) inactive dimension summary include 'start', 'count', 'dmin', 'dmax' identical values 1, 'length', 'min', 'max' array subsetting applied.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print tidync object — print.tidync","text":"","code":"argofile <- system.file(\"extdata/argo/MD5903593_001.nc\", package = \"tidync\") argo <- tidync(argofile) print(argo) #>  #> Data Source (1): MD5903593_001.nc ... #>  #> Grids (16) <dimension family> : <associated variables>  #>  #> [1]   D0,D9,D11,D8 : SCIENTIFIC_CALIB_DATE #> [2]   D6,D9,D11,D8 : PARAMETER #> [3]   D7,D9,D11,D8 : SCIENTIFIC_CALIB_EQUATION, SCIENTIFIC_CALIB_COEFFICIENT, SCIENTIFIC_CALIB_COMMENT #> [4]   D6,D9,D8     : STATION_PARAMETERS #> [5]   D10,D8       : PRES, PRES_QC, PRES_ADJUSTED, PRES_ADJUSTED_QC, PRES_ADJUSTED_ERROR, TEMP, TEMP_QC, TEMP_ADJUSTED, TEMP_ADJUSTED_QC, TEMP_ADJUSTED_ERROR, PSAL, PSAL_QC, PSAL_ADJUSTED, PSAL_ADJUSTED_QC, PSAL_ADJUSTED_ERROR, DOXY, DOXY_QC, DOXY_ADJUSTED, DOXY_ADJUSTED_QC, DOXY_ADJUSTED_ERROR, CHLA, CHLA_QC, CHLA_ADJUSTED, CHLA_ADJUSTED_QC, CHLA_ADJUSTED_ERROR, BBP700, BBP700_QC, BBP700_ADJUSTED, BBP700_ADJUSTED_QC, BBP700_ADJUSTED_ERROR, NITRATE, NITRATE_QC, NITRATE_ADJUSTED, NITRATE_ADJUSTED_QC, NITRATE_ADJUSTED_ERROR    **ACTIVE GRID** ( 986  values per variable) #> [6]   D1,D8        : DATA_CENTRE #> [7]   D2,D8        : DATA_STATE_INDICATOR, WMO_INST_TYPE #> [8]   D3,D8        : PLATFORM_NUMBER, POSITIONING_SYSTEM #> [9]   D5,D8        : DC_REFERENCE, PLATFORM_TYPE, FLOAT_SERIAL_NO, FIRMWARE_VERSION #> [10]   D6,D8        : PROJECT_NAME, PI_NAME #> [11]   D7,D8        : VERTICAL_SAMPLING_SCHEME #> [12]   D9,D8        : PARAMETER_DATA_MODE #> [13]   D0           : REFERENCE_DATE_TIME, DATE_CREATION, DATE_UPDATE #> [14]   D2           : FORMAT_VERSION, HANDBOOK_VERSION #> [15]   D5           : DATA_TYPE #> [16]   D8           : CYCLE_NUMBER, DIRECTION, DATA_MODE, JULD, JULD_QC, JULD_LOCATION, LATITUDE, LONGITUDE, POSITION_QC, CONFIG_MISSION_NUMBER, PROFILE_PRES_QC, PROFILE_TEMP_QC, PROFILE_PSAL_QC, PROFILE_DOXY_QC, PROFILE_CHLA_QC, PROFILE_BBP700_QC, PROFILE_NITRATE_QC #>  #> Dimensions 14 (2 active):  #>    #>   dim   name     length   min   max start count  dmin  dmax unlim coord_dim  #>   <chr> <chr>     <dbl> <dbl> <dbl> <int> <int> <dbl> <dbl> <lgl> <lgl>      #> 1 D8    N_PROF        2     1     2     1     2     1     2 FALSE FALSE      #> 2 D10   N_LEVELS    493     1   493     1   493     1   493 FALSE FALSE      #>    #> Inactive dimensions: #>    #>    dim   name       length   min   max unlim coord_dim  #>    <chr> <chr>       <dbl> <dbl> <dbl> <lgl> <lgl>      #>  1 D0    DATE_TIME      14     1    14 FALSE FALSE      #>  2 D1    STRING2         2     1     2 FALSE FALSE      #>  3 D2    STRING4         4     1     4 FALSE FALSE      #>  4 D3    STRING8         8     1     8 FALSE FALSE      #>  5 D4    STRING16       16    NA    NA FALSE FALSE      #>  6 D5    STRING32       32     1    32 FALSE FALSE      #>  7 D6    STRING64       64     1    64 FALSE FALSE      #>  8 D7    STRING256     256     1   256 FALSE FALSE      #>  9 D9    N_PARAM         7     1     7 FALSE FALSE      #> 10 D11   N_CALIB         1     1     1 FALSE FALSE      #> 11 D12   N_HISTORY       0    NA    NA TRUE  FALSE      #> 12 D13   N_VALUES41     41    NA    NA FALSE FALSE       ## the print is modified by choosing a new grid or running filters argo %>% activate(\"D7,D9,D11,D8\") #>  #> Data Source (1): MD5903593_001.nc ... #>  #> Grids (16) <dimension family> : <associated variables>  #>  #> [1]   D0,D9,D11,D8 : SCIENTIFIC_CALIB_DATE #> [2]   D6,D9,D11,D8 : PARAMETER #> [3]   D7,D9,D11,D8 : SCIENTIFIC_CALIB_EQUATION, SCIENTIFIC_CALIB_COEFFICIENT, SCIENTIFIC_CALIB_COMMENT    **ACTIVE GRID** ( 3584  values per variable) #> [4]   D6,D9,D8     : STATION_PARAMETERS #> [5]   D10,D8       : PRES, PRES_QC, PRES_ADJUSTED, PRES_ADJUSTED_QC, PRES_ADJUSTED_ERROR, TEMP, TEMP_QC, TEMP_ADJUSTED, TEMP_ADJUSTED_QC, TEMP_ADJUSTED_ERROR, PSAL, PSAL_QC, PSAL_ADJUSTED, PSAL_ADJUSTED_QC, PSAL_ADJUSTED_ERROR, DOXY, DOXY_QC, DOXY_ADJUSTED, DOXY_ADJUSTED_QC, DOXY_ADJUSTED_ERROR, CHLA, CHLA_QC, CHLA_ADJUSTED, CHLA_ADJUSTED_QC, CHLA_ADJUSTED_ERROR, BBP700, BBP700_QC, BBP700_ADJUSTED, BBP700_ADJUSTED_QC, BBP700_ADJUSTED_ERROR, NITRATE, NITRATE_QC, NITRATE_ADJUSTED, NITRATE_ADJUSTED_QC, NITRATE_ADJUSTED_ERROR #> [6]   D1,D8        : DATA_CENTRE #> [7]   D2,D8        : DATA_STATE_INDICATOR, WMO_INST_TYPE #> [8]   D3,D8        : PLATFORM_NUMBER, POSITIONING_SYSTEM #> [9]   D5,D8        : DC_REFERENCE, PLATFORM_TYPE, FLOAT_SERIAL_NO, FIRMWARE_VERSION #> [10]   D6,D8        : PROJECT_NAME, PI_NAME #> [11]   D7,D8        : VERTICAL_SAMPLING_SCHEME #> [12]   D9,D8        : PARAMETER_DATA_MODE #> [13]   D0           : REFERENCE_DATE_TIME, DATE_CREATION, DATE_UPDATE #> [14]   D2           : FORMAT_VERSION, HANDBOOK_VERSION #> [15]   D5           : DATA_TYPE #> [16]   D8           : CYCLE_NUMBER, DIRECTION, DATA_MODE, JULD, JULD_QC, JULD_LOCATION, LATITUDE, LONGITUDE, POSITION_QC, CONFIG_MISSION_NUMBER, PROFILE_PRES_QC, PROFILE_TEMP_QC, PROFILE_PSAL_QC, PROFILE_DOXY_QC, PROFILE_CHLA_QC, PROFILE_BBP700_QC, PROFILE_NITRATE_QC #>  #> Dimensions 14 (4 active):  #>    #>   dim   name      length   min   max start count  dmin  dmax unlim coord_dim  #>   <chr> <chr>      <dbl> <dbl> <dbl> <int> <int> <dbl> <dbl> <lgl> <lgl>      #> 1 D7    STRING256    256     1   256     1   256     1   256 FALSE FALSE      #> 2 D8    N_PROF         2     1     2     1     2     1     2 FALSE FALSE      #> 3 D9    N_PARAM        7     1     7     1     7     1     7 FALSE FALSE      #> 4 D11   N_CALIB        1     1     1     1     1     1     1 FALSE FALSE      #>    #> Inactive dimensions: #>    #>    dim   name       length   min   max unlim coord_dim  #>    <chr> <chr>       <dbl> <dbl> <dbl> <lgl> <lgl>      #>  1 D0    DATE_TIME      14     1    14 FALSE FALSE      #>  2 D1    STRING2         2     1     2 FALSE FALSE      #>  3 D2    STRING4         4     1     4 FALSE FALSE      #>  4 D3    STRING8         8     1     8 FALSE FALSE      #>  5 D4    STRING16       16    NA    NA FALSE FALSE      #>  6 D5    STRING32       32     1    32 FALSE FALSE      #>  7 D6    STRING64       64     1    64 FALSE FALSE      #>  8 D10   N_LEVELS      493     1   493 FALSE FALSE      #>  9 D12   N_HISTORY       0    NA    NA TRUE  FALSE      #> 10 D13   N_VALUES41     41    NA    NA FALSE FALSE       argo %>% hyper_filter(N_LEVELS = index > 300) #>  #> Data Source (1): MD5903593_001.nc ... #>  #> Grids (16) <dimension family> : <associated variables>  #>  #> [1]   D0,D9,D11,D8 : SCIENTIFIC_CALIB_DATE #> [2]   D6,D9,D11,D8 : PARAMETER #> [3]   D7,D9,D11,D8 : SCIENTIFIC_CALIB_EQUATION, SCIENTIFIC_CALIB_COEFFICIENT, SCIENTIFIC_CALIB_COMMENT #> [4]   D6,D9,D8     : STATION_PARAMETERS #> [5]   D10,D8       : PRES, PRES_QC, PRES_ADJUSTED, PRES_ADJUSTED_QC, PRES_ADJUSTED_ERROR, TEMP, TEMP_QC, TEMP_ADJUSTED, TEMP_ADJUSTED_QC, TEMP_ADJUSTED_ERROR, PSAL, PSAL_QC, PSAL_ADJUSTED, PSAL_ADJUSTED_QC, PSAL_ADJUSTED_ERROR, DOXY, DOXY_QC, DOXY_ADJUSTED, DOXY_ADJUSTED_QC, DOXY_ADJUSTED_ERROR, CHLA, CHLA_QC, CHLA_ADJUSTED, CHLA_ADJUSTED_QC, CHLA_ADJUSTED_ERROR, BBP700, BBP700_QC, BBP700_ADJUSTED, BBP700_ADJUSTED_QC, BBP700_ADJUSTED_ERROR, NITRATE, NITRATE_QC, NITRATE_ADJUSTED, NITRATE_ADJUSTED_QC, NITRATE_ADJUSTED_ERROR    **ACTIVE GRID** ( 986  values per variable) #> [6]   D1,D8        : DATA_CENTRE #> [7]   D2,D8        : DATA_STATE_INDICATOR, WMO_INST_TYPE #> [8]   D3,D8        : PLATFORM_NUMBER, POSITIONING_SYSTEM #> [9]   D5,D8        : DC_REFERENCE, PLATFORM_TYPE, FLOAT_SERIAL_NO, FIRMWARE_VERSION #> [10]   D6,D8        : PROJECT_NAME, PI_NAME #> [11]   D7,D8        : VERTICAL_SAMPLING_SCHEME #> [12]   D9,D8        : PARAMETER_DATA_MODE #> [13]   D0           : REFERENCE_DATE_TIME, DATE_CREATION, DATE_UPDATE #> [14]   D2           : FORMAT_VERSION, HANDBOOK_VERSION #> [15]   D5           : DATA_TYPE #> [16]   D8           : CYCLE_NUMBER, DIRECTION, DATA_MODE, JULD, JULD_QC, JULD_LOCATION, LATITUDE, LONGITUDE, POSITION_QC, CONFIG_MISSION_NUMBER, PROFILE_PRES_QC, PROFILE_TEMP_QC, PROFILE_PSAL_QC, PROFILE_DOXY_QC, PROFILE_CHLA_QC, PROFILE_BBP700_QC, PROFILE_NITRATE_QC #>  #> Dimensions 14 (2 active):  #>    #>   dim   name     length   min   max start count  dmin  dmax unlim coord_dim  #>   <chr> <chr>     <dbl> <dbl> <dbl> <int> <int> <dbl> <dbl> <lgl> <lgl>      #> 1 D8    N_PROF        2     1     2     1     2     1     2 FALSE FALSE      #> 2 D10   N_LEVELS    493     1   493   301   193   301   493 FALSE FALSE      #>    #> Inactive dimensions: #>    #>    dim   name       length   min   max unlim coord_dim  #>    <chr> <chr>       <dbl> <dbl> <dbl> <lgl> <lgl>      #>  1 D0    DATE_TIME      14     1    14 FALSE FALSE      #>  2 D1    STRING2         2     1     2 FALSE FALSE      #>  3 D2    STRING4         4     1     4 FALSE FALSE      #>  4 D3    STRING8         8     1     8 FALSE FALSE      #>  5 D4    STRING16       16    NA    NA FALSE FALSE      #>  6 D5    STRING32       32     1    32 FALSE FALSE      #>  7 D6    STRING64       64     1    64 FALSE FALSE      #>  8 D7    STRING256     256     1   256 FALSE FALSE      #>  9 D9    N_PARAM         7     1     7 FALSE FALSE      #> 10 D11   N_CALIB         1     1     1 FALSE FALSE      #> 11 D12   N_HISTORY       0    NA    NA TRUE  FALSE      #> 12 D13   N_VALUES41     41    NA    NA FALSE FALSE"},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Print tidync data — print.tidync_data","title":"Print tidync data — print.tidync_data","text":"Print method 'tidync_data' list arrays returned hyper_array().","code":""},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print tidync data — print.tidync_data","text":"","code":"# S3 method for class 'tidync_data' print(x, ...)"},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print tidync data — print.tidync_data","text":"x 'tidync_data' object (hyper_array()) ... reserved args","code":""},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print tidync data — print.tidync_data","text":"input object invisibly","code":""},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print tidync data — print.tidync_data","text":"output lists variables dimensions object previous call tidync(), possibly hyper_filter(). available data differ source terms variables (via select_var hyper_array) lengths dimension (via named expressions hyper_filter()).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tidync/reference/print.tidync_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print tidync data — print.tidync_data","text":"","code":"argofile <- system.file(\"extdata/argo/MD5903593_001.nc\", package = \"tidync\") argodata <- tidync(argofile) %>% hyper_filter(N_LEVELS = index < 5) %>%                hyper_array(select_var = c(\"TEMP_ADJUSTED\", \"PRES\")) print(argodata) #> Class: tidync_data (list of tidync data arrays) #> Variables (2): 'TEMP_ADJUSTED', 'PRES' #> Dimension (2): N_LEVELS,N_PROF (4, 2) #> Source: /usr/local/lib/R/site-library/tidync/extdata/argo/MD5903593_001.nc"},{"path":"https://docs.ropensci.org/tidync/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"https://docs.ropensci.org/tidync/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"system.file(\"extdata/argo/MD5903593_001.nc\", package = \"tidync\") %>%       tidync() #>  #> Data Source (1): MD5903593_001.nc ... #>  #> Grids (16) <dimension family> : <associated variables>  #>  #> [1]   D0,D9,D11,D8 : SCIENTIFIC_CALIB_DATE #> [2]   D6,D9,D11,D8 : PARAMETER #> [3]   D7,D9,D11,D8 : SCIENTIFIC_CALIB_EQUATION, SCIENTIFIC_CALIB_COEFFICIENT, SCIENTIFIC_CALIB_COMMENT #> [4]   D6,D9,D8     : STATION_PARAMETERS #> [5]   D10,D8       : PRES, PRES_QC, PRES_ADJUSTED, PRES_ADJUSTED_QC, PRES_ADJUSTED_ERROR, TEMP, TEMP_QC, TEMP_ADJUSTED, TEMP_ADJUSTED_QC, TEMP_ADJUSTED_ERROR, PSAL, PSAL_QC, PSAL_ADJUSTED, PSAL_ADJUSTED_QC, PSAL_ADJUSTED_ERROR, DOXY, DOXY_QC, DOXY_ADJUSTED, DOXY_ADJUSTED_QC, DOXY_ADJUSTED_ERROR, CHLA, CHLA_QC, CHLA_ADJUSTED, CHLA_ADJUSTED_QC, CHLA_ADJUSTED_ERROR, BBP700, BBP700_QC, BBP700_ADJUSTED, BBP700_ADJUSTED_QC, BBP700_ADJUSTED_ERROR, NITRATE, NITRATE_QC, NITRATE_ADJUSTED, NITRATE_ADJUSTED_QC, NITRATE_ADJUSTED_ERROR    **ACTIVE GRID** ( 986  values per variable) #> [6]   D1,D8        : DATA_CENTRE #> [7]   D2,D8        : DATA_STATE_INDICATOR, WMO_INST_TYPE #> [8]   D3,D8        : PLATFORM_NUMBER, POSITIONING_SYSTEM #> [9]   D5,D8        : DC_REFERENCE, PLATFORM_TYPE, FLOAT_SERIAL_NO, FIRMWARE_VERSION #> [10]   D6,D8        : PROJECT_NAME, PI_NAME #> [11]   D7,D8        : VERTICAL_SAMPLING_SCHEME #> [12]   D9,D8        : PARAMETER_DATA_MODE #> [13]   D0           : REFERENCE_DATE_TIME, DATE_CREATION, DATE_UPDATE #> [14]   D2           : FORMAT_VERSION, HANDBOOK_VERSION #> [15]   D5           : DATA_TYPE #> [16]   D8           : CYCLE_NUMBER, DIRECTION, DATA_MODE, JULD, JULD_QC, JULD_LOCATION, LATITUDE, LONGITUDE, POSITION_QC, CONFIG_MISSION_NUMBER, PROFILE_PRES_QC, PROFILE_TEMP_QC, PROFILE_PSAL_QC, PROFILE_DOXY_QC, PROFILE_CHLA_QC, PROFILE_BBP700_QC, PROFILE_NITRATE_QC #>  #> Dimensions 14 (2 active):  #>    #>   dim   name     length   min   max start count  dmin  dmax unlim coord_dim  #>   <chr> <chr>     <dbl> <dbl> <dbl> <int> <int> <dbl> <dbl> <lgl> <lgl>      #> 1 D8    N_PROF        2     1     2     1     2     1     2 FALSE FALSE      #> 2 D10   N_LEVELS    493     1   493     1   493     1   493 FALSE FALSE      #>    #> Inactive dimensions: #>    #>    dim   name       length   min   max unlim coord_dim  #>    <chr> <chr>       <dbl> <dbl> <dbl> <lgl> <lgl>      #>  1 D0    DATE_TIME      14     1    14 FALSE FALSE      #>  2 D1    STRING2         2     1     2 FALSE FALSE      #>  3 D2    STRING4         4     1     4 FALSE FALSE      #>  4 D3    STRING8         8     1     8 FALSE FALSE      #>  5 D4    STRING16       16    NA    NA FALSE FALSE      #>  6 D5    STRING32       32     1    32 FALSE FALSE      #>  7 D6    STRING64       64     1    64 FALSE FALSE      #>  8 D7    STRING256     256     1   256 FALSE FALSE      #>  9 D9    N_PARAM         7     1     7 FALSE FALSE      #> 10 D11   N_CALIB         1     1     1 FALSE FALSE      #> 11 D12   N_HISTORY       0    NA    NA TRUE  FALSE      #> 12 D13   N_VALUES41     41    NA    NA FALSE FALSE"},{"path":"https://docs.ropensci.org/tidync/reference/tidync-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidync: A Tidy Approach to 'NetCDF' Data Exploration and Extraction — tidync-package","title":"tidync: A Tidy Approach to 'NetCDF' Data Exploration and Extraction — tidync-package","text":"Tidy tools 'NetCDF' data sources. Explore contents 'NetCDF' source (file URL) presented variables organized grid database-like interface. hyper_filter() interactive function translates filter value index expressions array-slicing form. data read explicitly requested, data frame list arrays via hyper_tibble() hyper_array(). Provides easy use idioms working NetCDF data extraction, manipulation visualization. NetCDF Network Common Data Form https://www.unidata.ucar.edu/software/netcdf/.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/tidync-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"tidync: A Tidy Approach to 'NetCDF' Data Exploration and Extraction — tidync-package","text":"See print.tidync() details printed version tidync object. family functions \"hyper_verb\" around exploring extracting data. scheme generally processes dimension filters NetCDF extraction indexes always available function, expressed printed output. following options available.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tidync/reference/tidync-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidync: A Tidy Approach to 'NetCDF' Data Exploration and Extraction — tidync-package","text":"Maintainer: Michael Sumner mdsumner@gmail.com contributors: Simon Wotherspoon [contributor] Tomas Remenyi [contributor] Ben Raymond [contributor] Jakub Nowosad [contributor] Tim Lucas [contributor] Hadley Wickham [contributor] Adrian Odenweller [contributor] Patrick Van Laake [contributor] Fabian Bernhard [contributor]","code":""},{"path":"https://docs.ropensci.org/tidync/reference/tidync-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tidync: A Tidy Approach to 'NetCDF' Data Exploration and Extraction — tidync-package","text":"","code":"argofile <- system.file(\"extdata/argo/MD5903593_001.nc\", package = \"tidync\") argo <- tidync(argofile) argo %>% active() #> [1] \"D10,D8\" argo %>% activate(\"D3,D8\") %>% hyper_array() #> Class: tidync_data (list of tidync data arrays) #> Variables (2): 'PLATFORM_NUMBER', 'POSITIONING_SYSTEM' #> Dimension (1): STRING8,N_PROF (2) #> Source: /usr/local/lib/R/site-library/tidync/extdata/argo/MD5903593_001.nc argo %>% hyper_filter(N_LEVELS = index < 4) #>  #> Data Source (1): MD5903593_001.nc ... #>  #> Grids (16) <dimension family> : <associated variables>  #>  #> [1]   D0,D9,D11,D8 : SCIENTIFIC_CALIB_DATE #> [2]   D6,D9,D11,D8 : PARAMETER #> [3]   D7,D9,D11,D8 : SCIENTIFIC_CALIB_EQUATION, SCIENTIFIC_CALIB_COEFFICIENT, SCIENTIFIC_CALIB_COMMENT #> [4]   D6,D9,D8     : STATION_PARAMETERS #> [5]   D10,D8       : PRES, PRES_QC, PRES_ADJUSTED, PRES_ADJUSTED_QC, PRES_ADJUSTED_ERROR, TEMP, TEMP_QC, TEMP_ADJUSTED, TEMP_ADJUSTED_QC, TEMP_ADJUSTED_ERROR, PSAL, PSAL_QC, PSAL_ADJUSTED, PSAL_ADJUSTED_QC, PSAL_ADJUSTED_ERROR, DOXY, DOXY_QC, DOXY_ADJUSTED, DOXY_ADJUSTED_QC, DOXY_ADJUSTED_ERROR, CHLA, CHLA_QC, CHLA_ADJUSTED, CHLA_ADJUSTED_QC, CHLA_ADJUSTED_ERROR, BBP700, BBP700_QC, BBP700_ADJUSTED, BBP700_ADJUSTED_QC, BBP700_ADJUSTED_ERROR, NITRATE, NITRATE_QC, NITRATE_ADJUSTED, NITRATE_ADJUSTED_QC, NITRATE_ADJUSTED_ERROR    **ACTIVE GRID** ( 986  values per variable) #> [6]   D1,D8        : DATA_CENTRE #> [7]   D2,D8        : DATA_STATE_INDICATOR, WMO_INST_TYPE #> [8]   D3,D8        : PLATFORM_NUMBER, POSITIONING_SYSTEM #> [9]   D5,D8        : DC_REFERENCE, PLATFORM_TYPE, FLOAT_SERIAL_NO, FIRMWARE_VERSION #> [10]   D6,D8        : PROJECT_NAME, PI_NAME #> [11]   D7,D8        : VERTICAL_SAMPLING_SCHEME #> [12]   D9,D8        : PARAMETER_DATA_MODE #> [13]   D0           : REFERENCE_DATE_TIME, DATE_CREATION, DATE_UPDATE #> [14]   D2           : FORMAT_VERSION, HANDBOOK_VERSION #> [15]   D5           : DATA_TYPE #> [16]   D8           : CYCLE_NUMBER, DIRECTION, DATA_MODE, JULD, JULD_QC, JULD_LOCATION, LATITUDE, LONGITUDE, POSITION_QC, CONFIG_MISSION_NUMBER, PROFILE_PRES_QC, PROFILE_TEMP_QC, PROFILE_PSAL_QC, PROFILE_DOXY_QC, PROFILE_CHLA_QC, PROFILE_BBP700_QC, PROFILE_NITRATE_QC #>  #> Dimensions 14 (2 active):  #>    #>   dim   name     length   min   max start count  dmin  dmax unlim coord_dim  #>   <chr> <chr>     <dbl> <dbl> <dbl> <int> <int> <dbl> <dbl> <lgl> <lgl>      #> 1 D8    N_PROF        2     1     2     1     2     1     2 FALSE FALSE      #> 2 D10   N_LEVELS    493     1   493     1     3     1     3 FALSE FALSE      #>    #> Inactive dimensions: #>    #>    dim   name       length   min   max unlim coord_dim  #>    <chr> <chr>       <dbl> <dbl> <dbl> <lgl> <lgl>      #>  1 D0    DATE_TIME      14     1    14 FALSE FALSE      #>  2 D1    STRING2         2     1     2 FALSE FALSE      #>  3 D2    STRING4         4     1     4 FALSE FALSE      #>  4 D3    STRING8         8     1     8 FALSE FALSE      #>  5 D4    STRING16       16    NA    NA FALSE FALSE      #>  6 D5    STRING32       32     1    32 FALSE FALSE      #>  7 D6    STRING64       64     1    64 FALSE FALSE      #>  8 D7    STRING256     256     1   256 FALSE FALSE      #>  9 D9    N_PARAM         7     1     7 FALSE FALSE      #> 10 D11   N_CALIB         1     1     1 FALSE FALSE      #> 11 D12   N_HISTORY       0    NA    NA TRUE  FALSE      #> 12 D13   N_VALUES41     41    NA    NA FALSE FALSE      argo %>% hyper_tbl_cube() #> Source: local array [986 x 2] #> D: N_LEVELS [int, 493] #> D: N_PROF [int, 2] #> M: PRES [dbl[,2]] #> M: PRES_QC [chr[,2]] #> M: PRES_ADJUSTED [dbl[,2]] #> M: PRES_ADJUSTED_QC [chr[,2]] #> M: PRES_ADJUSTED_ERROR [dbl[,2]] #> M: TEMP [dbl[,2]] #> M: TEMP_QC [chr[,2]] #> M: TEMP_ADJUSTED [dbl[,2]] #> M: TEMP_ADJUSTED_QC [chr[,2]] #> M: TEMP_ADJUSTED_ERROR [dbl[,2]] #> M: PSAL [dbl[,2]] #> M: PSAL_QC [chr[,2]] #> M: PSAL_ADJUSTED [dbl[,2]] #> M: PSAL_ADJUSTED_QC [chr[,2]] #> M: PSAL_ADJUSTED_ERROR [dbl[,2]] #> M: DOXY [dbl[,2]] #> M: DOXY_QC [chr[,2]] #> M: DOXY_ADJUSTED [dbl[,2]] #> M: DOXY_ADJUSTED_QC [chr[,2]] #> M: DOXY_ADJUSTED_ERROR [dbl[,2]] #> M: CHLA [dbl[,2]] #> M: CHLA_QC [chr[,2]] #> M: CHLA_ADJUSTED [dbl[,2]] #> M: CHLA_ADJUSTED_QC [chr[,2]] #> M: CHLA_ADJUSTED_ERROR [dbl[,2]] #> M: BBP700 [dbl[,2]] #> M: BBP700_QC [chr[,2]] #> M: BBP700_ADJUSTED [dbl[,2]] #> M: BBP700_ADJUSTED_QC [chr[,2]] #> M: BBP700_ADJUSTED_ERROR [dbl[,2]] #> M: NITRATE [dbl[,2]] #> M: NITRATE_QC [chr[,2]] #> M: NITRATE_ADJUSTED [dbl[,2]] #> M: NITRATE_ADJUSTED_QC [chr[,2]] #> M: NITRATE_ADJUSTED_ERROR [dbl[,2]] argo %>% hyper_tibble(select_var = c(\"TEMP_QC\")) #> # A tibble: 986 × 3 #>    TEMP_QC N_LEVELS N_PROF #>    <chr>      <int>  <int> #>  1 1              1      1 #>  2 1              2      1 #>  3 1              3      1 #>  4 1              4      1 #>  5 1              5      1 #>  6 1              6      1 #>  7 1              7      1 #>  8 1              8      1 #>  9 1              9      1 #> 10 1             10      1 #> # ℹ 976 more rows argo %>% hyper_transforms() #> $N_LEVELS #> # A tibble: 493 × 6 #>    N_LEVELS index    id name     coord_dim selected #>       <int> <int> <int> <chr>    <lgl>     <lgl>    #>  1        1     1    10 N_LEVELS FALSE     TRUE     #>  2        2     2    10 N_LEVELS FALSE     TRUE     #>  3        3     3    10 N_LEVELS FALSE     TRUE     #>  4        4     4    10 N_LEVELS FALSE     TRUE     #>  5        5     5    10 N_LEVELS FALSE     TRUE     #>  6        6     6    10 N_LEVELS FALSE     TRUE     #>  7        7     7    10 N_LEVELS FALSE     TRUE     #>  8        8     8    10 N_LEVELS FALSE     TRUE     #>  9        9     9    10 N_LEVELS FALSE     TRUE     #> 10       10    10    10 N_LEVELS FALSE     TRUE     #> # ℹ 483 more rows #>  #> $N_PROF #> # A tibble: 2 × 6 #>   N_PROF index    id name   coord_dim selected #>    <int> <int> <int> <chr>  <lgl>     <lgl>    #> 1      1     1     8 N_PROF FALSE     TRUE     #> 2      2     2     8 N_PROF FALSE     TRUE     #>  argo %>% hyper_vars() #> # A tibble: 35 × 6 #>       id name                type     ndims natts dim_coord #>    <int> <chr>               <chr>    <int> <int> <lgl>     #>  1    37 PRES                NC_FLOAT     2    10 FALSE     #>  2    38 PRES_QC             NC_CHAR      2     3 FALSE     #>  3    39 PRES_ADJUSTED       NC_FLOAT     2     9 FALSE     #>  4    40 PRES_ADJUSTED_QC    NC_CHAR      2     3 FALSE     #>  5    41 PRES_ADJUSTED_ERROR NC_FLOAT     2     6 FALSE     #>  6    42 TEMP                NC_FLOAT     2     9 FALSE     #>  7    43 TEMP_QC             NC_CHAR      2     3 FALSE     #>  8    44 TEMP_ADJUSTED       NC_FLOAT     2     9 FALSE     #>  9    45 TEMP_ADJUSTED_QC    NC_CHAR      2     3 FALSE     #> 10    46 TEMP_ADJUSTED_ERROR NC_FLOAT     2     6 FALSE     #> # ℹ 25 more rows argo %>% hyper_dims() #> # A tibble: 2 × 7 #>   name     length start count    id unlim coord_dim #>   <chr>     <dbl> <int> <int> <int> <lgl> <lgl>     #> 1 N_LEVELS    493     1   493    10 FALSE FALSE     #> 2 N_PROF        2     1     2     8 FALSE FALSE     argo %>% hyper_grids() #> # A tibble: 16 × 4 #>    grid         ndims nvars active #>    <chr>        <int> <int> <lgl>  #>  1 D0,D9,D11,D8     4     1 FALSE  #>  2 D6,D9,D11,D8     4     1 FALSE  #>  3 D7,D9,D11,D8     4     3 FALSE  #>  4 D6,D9,D8         3     1 FALSE  #>  5 D10,D8           2    35 TRUE   #>  6 D1,D8            2     1 FALSE  #>  7 D2,D8            2     2 FALSE  #>  8 D3,D8            2     2 FALSE  #>  9 D5,D8            2     4 FALSE  #> 10 D6,D8            2     2 FALSE  #> 11 D7,D8            2     1 FALSE  #> 12 D9,D8            2     1 FALSE  #> 13 D0               1     3 FALSE  #> 14 D2               1     2 FALSE  #> 15 D5               1     1 FALSE  #> 16 D8               1    17 FALSE   ## some global options getOption(\"tidync.large.data.check\") #> [1] TRUE  getOption(\"tidync.silent\") #> [1] FALSE op <- options(tidync.silent = TRUE) getOption(\"tidync.silent\") #> [1] TRUE options(op)"},{"path":"https://docs.ropensci.org/tidync/reference/tidync.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy NetCDF — tidync","title":"Tidy NetCDF — tidync","text":"Connect NetCDF source allow use hyper_* verbs slicing hyper_filter(), extracting data hyper_array()  [hyper_tibble() activated grid. default largest grid encountered activated, seeactivate().","code":""},{"path":"https://docs.ropensci.org/tidync/reference/tidync.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy NetCDF — tidync","text":"","code":"tidync(x, what, ...)  # S3 method for class 'character' tidync(x, what, ...)  # S3 method for class 'tidync_data' tidync(x, what, ...)"},{"path":"https://docs.ropensci.org/tidync/reference/tidync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy NetCDF — tidync","text":"x path NetCDF file (optional) character name grid (see ncmeta::nc_grids) (bare) name variable (see ncmeta::nc_vars) index grid activate ... reserved arguments methods, currently ignored","code":""},{"path":"https://docs.ropensci.org/tidync/reference/tidync.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy NetCDF — tidync","text":"print method tidync includes lot information variables exist dimensions, slicing (hyper_filter()) operations occurred summarized 'start' 'count' modifications relative dimension lengths. See print details, hyper_vars programmatic access information Many NetCDF forms supported tidync tries reduce interpretation applied given source. NetCDF system defines 'grid' storing array data, 'grid' array 'shape', 'set dimensions'). may several grids single source introduce concept grid 'activation'. activated, downstream tasks apply set variables exist grid. NetCDF sources numeric types chosen default, even existing 'NC_CHAR' type variables largest grid. read 'NC_CHAR' type variables exploded single character elements dimensions match source.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/tidync.html","id":"grids","dir":"Reference","previous_headings":"","what":"Grids","title":"Tidy NetCDF — tidync","text":"grid instance particular set dimensions, can shared one variable. 'rank' variable (number dimensions) since single data set may many 3D variables composed different sets axes/dimensions. formality around concept 'shape', far know. dimension may length zero, special case \"measure\" dimension, think. (mean product dimensions zero, example).","code":""},{"path":"https://docs.ropensci.org/tidync/reference/tidync.html","id":"limitations","dir":"Reference","previous_headings":"","what":"Limitations","title":"Tidy NetCDF — tidync","text":"Files compound types yet supported fail gracefully. Groups yet supported. yet explored 'HDF5' detail, feedback appreciated. Major use compound types made https://github.com/sosoc/croc.","code":""},{"path":"https://docs.ropensci.org/tidync/reference/tidync.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy NetCDF — tidync","text":"","code":"## a SeaWiFS (S) Level-3 Mapped (L3m) monthly (MO) chlorophyll-a (CHL) ## remote sensing product at 9km resolution (at the equator) ## from the NASA ocean colour group in NetCDF4 format (.nc) ## for 31 day period January 2008 (S20080012008031)  f <- \"S20080012008031.L3m_MO_CHL_chlor_a_9km.nc\" l3file <- system.file(\"extdata/oceandata\", f, package= \"tidync\") ## skip on Solaris if (!tolower(Sys.info()[[\"sysname\"]]) == \"sunos\") { tnc <- tidync(l3file) print(tnc) } #>  #> Data Source (1): S20080012008031.L3m_MO_CHL_chlor_a_9km.nc ... #>  #> Grids (4) <dimension family> : <associated variables>  #>  #> [1]   D1,D0 : chlor_a    **ACTIVE GRID** ( 9331200  values per variable) #> [2]   D3,D2 : palette #> [3]   D0    : lat #> [4]   D1    : lon #>  #> Dimensions 4 (2 active):  #>    #>   dim   name  length    min   max start count   dmin  dmax unlim coord_dim  #>   <chr> <chr>  <dbl>  <dbl> <dbl> <int> <int>  <dbl> <dbl> <lgl> <lgl>      #> 1 D0    lat     2160  -90.0  90.0     1  2160  -90.0  90.0 FALSE TRUE       #> 2 D1    lon     4320 -180.  180.      1  4320 -180.  180.  FALSE TRUE       #>    #> Inactive dimensions: #>    #>   dim   name          length   min   max unlim coord_dim  #>   <chr> <chr>          <dbl> <dbl> <dbl> <lgl> <lgl>      #> 1 D2    rgb                3     1     3 FALSE FALSE      #> 2 D3    eightbitcolor    256     1   256 FALSE FALSE       ## very simple Unidata example file, with one dimension if (FALSE) { # \\dontrun{ uf <- system.file(\"extdata/unidata\", \"test_hgroups.nc\", package = \"tidync\") recNum <- tidync(uf) %>% hyper_tibble() print(recNum) } # } ## a raw grid of Southern Ocean sea ice concentration from IFREMER ## it is 12.5km resolution passive microwave concentration values ## on a polar stereographic grid, on 2 October 2017, displaying the  ## \"hole in the ice\" made famous here: ## https://tinyurl.com/ycbchcgn ifr <- system.file(\"extdata/ifremer\", \"20171002.nc\", package = \"tidync\") ifrnc <- tidync(ifr) #> Warning: Function `CFtimestamp()` is deprecated. Use `as_timestamp()` instead. ifrnc %>% hyper_tibble(select_var = \"concentration\") #> # A tibble: 207,195 × 4 #>    concentration    ni    nj time                #>            <int> <int> <int> <chr>               #>  1             0   291     5 2017-10-02 12:00:00 #>  2             0   292     5 2017-10-02 12:00:00 #>  3             0   293     5 2017-10-02 12:00:00 #>  4             0   294     5 2017-10-02 12:00:00 #>  5             0   295     5 2017-10-02 12:00:00 #>  6             0   296     5 2017-10-02 12:00:00 #>  7             0   297     5 2017-10-02 12:00:00 #>  8             0   298     5 2017-10-02 12:00:00 #>  9             0   299     5 2017-10-02 12:00:00 #> 10             0   300     5 2017-10-02 12:00:00 #> # ℹ 207,185 more rows"},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-030","dir":"Changelog","previous_headings":"","what":"tidync 0.3.0","title":"tidync 0.3.0","text":"CRAN release: 2022-10-27 Add option silence warnings messages. See #115, suggestion @markpayneatwork.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-025","dir":"Changelog","previous_headings":"","what":"tidync 0.2.5","title":"tidync 0.2.5","text":"Improved documentation large data check hyper_array() hyper_tibble() hyper_tbl_cube(), allowed user-controlled option avoid check. Thanks Alessandro Bigi feedback.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-024","dir":"Changelog","previous_headings":"","what":"tidync 0.2.4","title":"tidync 0.2.4","text":"CRAN release: 2020-05-12 Now inports cubelyr rather dplyr tbl_cube() thanks Hadley Wickham PR #102.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-023","dir":"Changelog","previous_headings":"","what":"tidync 0.2.3","title":"tidync 0.2.3","text":"CRAN release: 2019-11-06 Remove test burden.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-022","dir":"Changelog","previous_headings":"","what":"tidync 0.2.2","title":"tidync 0.2.2","text":"CRAN release: 2019-10-22 Fix broken tests due changes RNetCDF, thanks CRAN notification. Added example readme docs, checks non-unique hyper_filter() names, per #93. Thanks @everydayduffy suggestion.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-021","dir":"Changelog","previous_headings":"","what":"tidync 0.2.1","title":"tidync 0.2.1","text":"CRAN release: 2019-05-23 Now depends R 3.5.0. Removed obscure numeric ‘’ logic activate(). Fixed tidync method hyper_array() output. Found really bad bug hyper_array() (#92), now fixed. Axis order transforms sometimes reversed, caused garbled results hyper_tibble(). effect ruin ggplot2 figures source files. ’s likely system yet uses hyper_array() format impact low.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-020","dir":"Changelog","previous_headings":"","what":"tidync 0.2.0","title":"tidync 0.2.0","text":"CRAN release: 2019-05-14 tidync now part rOpenSci project. Fixes tests examples avoid version-incapable NetCDF problems Solaris. number improved tests documentation fixes. Deal warnings tidyr version > 0.8.3. huge thank rOpenSci contributions, especially helpful reviews @Nowosad @timcdlucas well organizers @karthik, @stefaniebutland @sckott. Helpful input also provided via issues @adrfantini, @JustBerkhout, @matteodefelice, @rensa, @rmendels, @sw-rifai, @tremenyi. Pull requests contributed @dlebauer, @edzer.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-011","dir":"Changelog","previous_headings":"","what":"tidync 0.1.1","title":"tidync 0.1.1","text":"CRAN release: 2019-04-27 Package improvements thanks CRAN feedback, clarified Description added examples. Replaced cat() print() calls message() warning(). New class ‘tidync_data’ output hyper_array(), underlying change object simply list arrays variable, axis transforms stored attribute. Old deprecated function axis_transforms() now Defunct.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-010","dir":"Changelog","previous_headings":"","what":"tidync 0.1.0","title":"tidync 0.1.0","text":"FIRST RELEASE, tidync greatly improved via help rOpenSci review process. New function hyper_grids() report available grid names. printing error dimension value ranges now fixed, thanks James Goldie (#84). Now supports ‘NC_CHAR’ type, exploding array size expected. Breaking change: using tidync$gridit’s now expected must betidyr::unnest()ed order expand grid list per variable, line https://github.com/hypertidy/ncmeta/issues/26. hyper_array function now stores relevant transforms table attribute transforms objects can constructed directly native array output.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-003","dir":"Changelog","previous_headings":"","what":"tidync 0.0.3","title":"tidync 0.0.3","text":"Function rename hyper_array() now matches hyper_tibble() indicating form output (rather action used, hyper_slice()). New functions hyper_vars() hyper_dims() reporting currently active variables dimensions status. Now dependent ncmeta >= 0.0.2, partly avoid crashing invalid source file strings Removed hyper_index() incorporated hyper_filter(), ’s now one delay-capable class ‘tidync’","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-002","dir":"Changelog","previous_headings":"","what":"tidync 0.0.2","title":"tidync 0.0.2","text":"Function hyper_filter() now uses selection idiom, record state axis rather explicitly filter . means can flexibility axis transform tables can used , removes unwieldy handling code. available axes object first contact, means can program entire space source help complex mapping scenarios. Function hyper filter() print now handles case char-type coordinate values setting min max NA_real_ Various improvements fixes print method tidync Support coordinate-less dimensions added, new information print summary dimensions “coord_dim” results axis transform tables using index coordinate value. Functions hyper_slice() hyper_tibble() now return variables exist within grid version sees new model activation ‘grids’, effectively space composed dimensions. addition variables, dimension, attributes entities add ‘grid’ defined set dimensions, ‘axis’ instance particular dimension used variable. Sources without recognizable variables now gracefully handled, help ncmeta.","code":""},{"path":"https://docs.ropensci.org/tidync/news/index.html","id":"tidync-001","dir":"Changelog","previous_headings":"","what":"tidync 0.0.1","title":"tidync 0.0.1","text":"Now imports ncdump > 0.0.3. Installed external example data Unidata website First working version now tidync(), hyper_*() family functions. Migrated ncdump.","code":""}]
